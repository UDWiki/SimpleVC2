<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SGLibrary.Pub</name>
    </assembly>
    <members>
        <member name="T:SGLibrary.DB.DataTableInfo">
            <summary>
            将DataTable转乘易调试的样式
            </summary>
        </member>
        <member name="T:SGLibrary.DB.DataColumnInfo">
            <summary>
            将DataColumn转乘易调试的样式
            </summary>
        </member>
        <member name="P:SGLibrary.DB.DataColumnInfo.ValueCountByEnabled">
            <summary>
            值数量
            </summary>
        </member>
        <member name="P:SGLibrary.DB.DataColumnInfo.ValueCountByEmpty">
            <summary>
            空值数
            </summary>
        </member>
        <member name="P:SGLibrary.DB.DataColumnInfo.ValueExamples">
            <summary>
            属性值示例, 只显示前20个
            </summary>
        </member>
        <member name="P:SGLibrary.DB.DataColumnInfo.ValueSet">
            <summary>
            状态列表(不包含空)
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.ExFileIO_TextFile">
            <summary>
            不要使用
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExFileIO_TextFile.WriteStrToFile(System.String,System.String)">
            <summary>
            以StreamWriter形式写入
            建议用File.WriteAllText
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExFileIO_TextFile.WriteStrToFile(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            以StreamWriter形式写入
            建议用File.WriteAllText
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExFileIO_TextFile.ReadTextFile(System.String)">
            <summary>
            以StreamReader用System.Text.Encoding.Default读取
            建议用File.ReadAllText(fileName)
            </summary>
        </member>
        <member name="T:SGLibrary.Excel.AttributeProviderExcelColumn2GridBindColumn">
            <summary>
            使用ExcelColumnAttribute的Title、ReadOnly、Sequence定义GridBindColumnAttribute
            </summary>
        </member>
        <member name="T:SGLibrary.Excel.AttributeProviderOrmProperty2ExcelColumn">
            <summary>
            使用OrmPropertyAttribute的Title、Sequence定义ExcelColumnAttribute
            </summary>
        </member>
        <member name="T:SGLibrary.Excel.ExcelAccess_OledbAce">
            <summary>
            需要Mircrosoft.ace.oledb.12.0驱动以便使用Ace访问Excel
            </summary>
        </member>
        <member name="M:SGLibrary.Excel.ExcelAccess_OledbAce.TryListExcelSheets(System.String)">
            <summary>
            使用Ace列出Excel文件的所有Sheet, 注意返回的有"FilterDatabase"结尾的隐含Sheet
            </summary>
        </member>
        <member name="M:SGLibrary.Excel.ExcelAccess_OledbAce.TryLoadExcelData(System.String,System.String)">
            <summary>
            使用Act装载Excel的数据
            </summary>
        </member>
        <member name="T:SGLibrary.Excel.ExcelColumnAttribute">
            <summary>
            导入导出Excel 列名
            </summary>
        </member>
        <member name="T:SGLibrary.Excel.ExcelColumnBooleanAttribute">
            <summary>
            Boolean类型用字符串表达,注意在Title提示用户可接受的输入
            </summary>
        </member>
        <member name="F:SGLibrary.Excel.ExcelVersion.HSSF">
            <summary>
            2003版本, .xls
            </summary>
        </member>
        <member name="F:SGLibrary.Excel.ExcelVersion.XSSF">
            <summary>
            2007版本, .xlsx
            </summary>
        </member>
        <member name="T:SGLibrary.Excel.ExcelSheetAttribute">
            <summary>
            导入导出ExcelSheet名
            </summary>
        </member>
        <member name="T:SGLibrary.Excel.IExcelImportExport">
            <summary>
            Excel导入导出接口
            </summary>
        </member>
        <member name="M:SGLibrary.Excel.IExcelImportExport.CreateTemplatePlane``1(System.String)">
            <summary>
            创建单一类型的数据模板
            </summary>
        </member>
        <member name="M:SGLibrary.Excel.IExcelImportExport.ExportPlane``1(System.String,System.Collections.Generic.IList{``0})">
            <summary>
            导出单一类型的数据列表
            </summary>
        </member>
        <member name="M:SGLibrary.Excel.IExcelImportExport.ExportPlane``1(System.Collections.Generic.IList{``0})">
            <summary>
            导出单一类型的数据列表
            </summary>
        </member>
        <member name="M:SGLibrary.Excel.IExcelImportExport.ImportPlane``1(System.String)">
            <summary>
            导入单一类型的数据
            ExcelSheetAttribute指定 > 第一个sheet
            </summary>
        </member>
        <member name="M:SGLibrary.Excel.IExcelImportExport.ImportPlane``1(System.IO.Stream)">
            <summary>
            导入单一类型的数据
            ExcelSheetAttribute指定 > 第一个sheet
            </summary>
        </member>
        <member name="M:SGLibrary.Excel.IExcelImportExport.ExportMultilayer``1(System.String,System.Collections.Generic.IList{SGLibrary.Excel.SheetData{``0}})">
            <summary>
            导出类型一致的重复的多页数据
            </summary>
        </member>
        <member name="M:SGLibrary.Excel.IExcelImportExport.ExportMultilayer``1(System.Collections.Generic.IList{SGLibrary.Excel.SheetData{``0}})">
            <summary>
            导出类型一致的重复的多页数据
            </summary>
        </member>
        <member name="M:SGLibrary.Excel.IExcelImportExport.ImportMultilayer``1(System.String)">
            <summary>
            导入类型一致的重复的多页数据
            </summary>
        </member>
        <member name="M:SGLibrary.Excel.IExcelImportExport.ImportMultilayer``1(System.IO.Stream)">
            <summary>
            导入类型一致的重复的多页数据
            </summary>
        </member>
        <member name="M:SGLibrary.Excel.IExcelImportExport.CreateTemplateHeterogeneity(System.String,System.Collections.Generic.IList{System.Type})">
            <summary>
            创建多类型的数据模板(每页一个类型)
            </summary>
        </member>
        <member name="M:SGLibrary.Excel.IExcelImportExport.CreateTemplateHeterogeneity(System.Collections.Generic.IList{System.Type})">
            <summary>
            创建多类型的数据模板(每页一个类型)
            </summary>
        </member>
        <member name="M:SGLibrary.Excel.IExcelImportExport.ExportHeterogeneity(System.String,System.Collections.Generic.IList{System.Collections.IList})">
            <summary>
            导出多类型的数据
            </summary>
        </member>
        <member name="M:SGLibrary.Excel.IExcelImportExport.ExportHeterogeneity(System.Collections.Generic.IList{System.Collections.IList})">
            <summary>
            导出多类型的数据
            </summary>
        </member>
        <member name="M:SGLibrary.Excel.IExcelImportExport.ImportHeterogeneity(System.String,System.Collections.Generic.IList{System.Type})">
            <summary>
            导入多类型的数据
            </summary>
        </member>
        <member name="M:SGLibrary.Excel.IExcelImportExport.ImportHeterogeneity(System.IO.Stream,System.Collections.Generic.IList{System.Type})">
            <summary>
            导入多类型的数据
            </summary>
        </member>
        <member name="M:SGLibrary.Excel.IExcelImportExport.FindTList``1(System.Collections.Generic.IList{System.Collections.IList})">
            <summary>
            从多类型数据列表中找到指定类型的列表
            </summary>
        </member>
        <member name="P:SGLibrary.Excel.SheetData`1.SheetName">
            <summary>
            页标题
            </summary>
        </member>
        <member name="P:SGLibrary.Excel.SheetData`1.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="T:SGLibrary.DB.IDbDialect">
            <summary>
             处理DB之差异
            </summary>
        </member>
        <member name="P:SGLibrary.DB.DbDialect_Access.ParaPrefix">
            <summary>
            Access.ParaPrefix 使用:/@都可以
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExConvertObj.ObjectToHexStr(System.Object)">
            <summary>
            序列化任意对象到一个组合的、可校验的、不含空格等特殊字符的串(仅包含：数字、":"、Type.FullName中字符）
            类型必须用Serializable标识
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExConvertObj.HexStrToObject(System.String)">
            <summary>
            反序列化组合串到对象
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExConvertObj.HexStrToObject``1(System.String)">
            <summary>
            反序列化组合串到对象
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExFileDialog.GetSaveFileName(System.String,System.String,System.String)">
            <summary>
            System.Environment
            System.Windows.Forms.Application.StartupPath 
            System.Reflection.Assembly.GetEntryAssembly().Location 
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExStream.ConvertToMemoryStream(System.IO.Stream,System.Int32)">
            <summary>
            从inStream当前位置读，注意转换前可能要设置inStream.Position
            bufferSize: 1--1G
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExString.SplitAndFormat(System.String,System.String)">
            <summary>
            分离后串会Trim，不含空串
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExString.JoinStrings(System.String,System.String[])">
            <summary>
            组合之，如将Id组合成"1,2,3", 类似String.Join
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExString.Join``1(System.String,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            组合之，如将Id组合成"1,2,3"; source允许null, 类似String.Join
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExString.Join``1(System.String,System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String})">
            <summary>
            组合之，如将Id组合成"1,2,3"; source允许null, 类似String.Join
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExString.TrySplitGuid(System.String,System.String)">
            <summary>
            Guid.Empty会被跳过
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExString.TryCutNum_Starts(System.String@)">
            <summary>
            剪出最左边的数字，非数字开始则返回null且value不变
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExString.TryCutNum_Ends(System.String@)">
            <summary>
            剪出最右边的数字，非数字结尾则返回null且value不变
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExString.TryCutNum_First(System.String@)">
            <summary>
            剪出最先出现的一组数字
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExString.TryCutNum_Last(System.String@)">
            <summary>
            剪出最后出现的一组数字
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExString.ToUniform(System.Object,System.Int32)">
            <summary>
               字符串长度规格化, 不会截断，所有可能超过期望的长度
               不足右侧填充空格
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExString.ToUniform(System.Object,System.Int32,System.Char)">
            <summary>
               字符串长度规格化, 不会截断，所有可能超过期望的长度
               不足右侧填充C
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExString.ToUniform_LFill_Tough(System.Object,System.Int32,System.Char)">
            <summary>
               字符串长度规格化, 过长的会被截断
               不足左侧填充C
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExString.ToUniform_LFill(System.Object,System.Int32,System.Char)">
            <summary>
               字符串长度规格化, 不会截断，所有可能超过期望的长度
               不足左侧填充C
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExString.ReplaceLast(System.String,System.String,System.String)">
            <summary>
               替换后缀，后缀不必等长。
               靠AttachMark向左侧识别，Last中最好不出现AttachMark
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExString.ReplaceLastUniform(System.String,System.String,System.String)">
            <summary>
               替换后缀，后缀必须等长。
               通常用在SaveAs中，后缀为表示时间的串
               ReplaceStringLast("我的工作_061123", "_", "071209") = "我的工作_071209"
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExString.SafeSubstring(System.String,System.Int32)">
            <summary>
               安全的子字符串，尽力而为且不会返回null
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExString.SafeSubstring(System.String,System.Int32,System.Int32)">
            <summary>
               安全的子字符串，尽力而为且不会返回null
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExString.StringListToUpper(System.Collections.Generic.IList{System.String})">
            <summary>
                将StringList的所有成员ToUpper
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExString.StringListToLower(System.Collections.Generic.IList{System.String})">
            <summary>
                将StringList的所有成员ToLower
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExString.SafeCut(System.String@,System.Int32)">
            <summary>
            从strValue剪下前Len个字符
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExString.SafeCut(System.String@,System.String)">
            <summary>
            从strValue剪下第一个p前的部分，strValue保留剩余的（不包括第一个p）
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExString.WSStringToWinString(System.String)">
            <summary>
            WebService返回的字符串都是以\n换行的，转换成\r\n
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExString.Format(System.String,System.Object[])">
            <summary>
            String.Format的format存在'{'、'}'时会报错的
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExString.ToHafeCharString(System.String)">
            <summary>
            把字符串中的全角转换为半角，查表
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExString.ToHafeCharString2(System.String)">
            <summary>
            把字符串中的全角转换为半角，假设是有序的
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExString.ChangeStrToSBC(System.String)">
            <summary>
            把字母,数字由半角转化为全角
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExString.ChangeStrToDBC(System.String)">
            <summary>
            将字母，数字由全角转化为半角，value可以为null
            </summary>
        </member>
        <member name="F:SGLibrary.Extend.Win32Api.WM_USER">
            <summary>
            用户自定义消息起点
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.ListChildControlInfo">
            <summary>
            会递归找到所有子控件
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereNodeGuidIn">
            <summary>
            Guid In查询条件
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.ISqlWhereProvider.GetSqlWhere(SGLibrary.DB.IDbDialect,SGLibrary.Framework.Criterion.DlgBindToFieldInfo,System.Collections.Generic.IList{SGLibrary.Extend.KeyValue{System.String,System.Object}})">
            <summary>
            bindToFieldName == null直接使用bind
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.IWhereNode.Bind">
            <summary>
            绑定的属性名
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereNodeGuidIn.#ctor(System.String,System.Guid[])">
            <summary>
            At values
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereNodeGuidIn.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            At values
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeGuidIn.Compare">
            <summary>
            比较符
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeGuidIn.CompareValueString">
            <summary>
            逗号分隔的
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.WinFormControl.WhereCtlIntInListBox.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WinFormControl.WhereCtlIntInListBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WinFormControl.WhereCtlIntInListBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereCtlLoadItemsEventArgs`1.Parent">
            <summary>
            为方便处理级联列表
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WinFormControl.WhereCtlStringIn">
            <summary>
            双击弹出选择框的字符In控件
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereCtlBase">
            <summary>
            查询条件基类
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.WhereCtlBase.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereCtlBase.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereCtlBase.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:SGLibrary.Framework.Criterion.WhereCtlBase.WhereChanged">
            <summary>
            查询条件改变
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.WinFormControl.WhereCtlStringIn.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WinFormControl.WhereCtlStringIn.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WinFormControl.WhereCtlStringIn.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WinFormControl.WhereCtlStringIn.ItemsString">
            <summary>
            逗号分隔的待选项
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.WinFormControl.WhereCtlStringInListBox.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WinFormControl.WhereCtlStringInListBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WinFormControl.WhereCtlStringInListBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.WinFormControl.WhereCtlStringIn_Slt.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WinFormControl.WhereCtlStringIn_Slt.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WinFormControl.WhereCtlStringIn_Slt.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.WinFormControl.WhereEditPanel.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WinFormControl.WhereEditPanel.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WinFormControl.WhereEditPanel.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WinFormControl.WhereEditPanel.WhereString">
            <summary>
            数据为 WhereListApply.StringToList/ListToString 格式
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.GridBind.WinForm.GridViewBind`1">
            <summary>
            这个版本支持冻结
            </summary>
            <summary>
            仅为了提供更方便的构造函数
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.GridBind.WinForm.GridBindBase`1">
            <summary>
            这个版本支持冻结
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.GridBind.WinForm.GridBindBase`1.InitColumns">
            <summary>
            使用ColumnMng初始化表格
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.GridBind.WinForm.GridBindBase`1.Binding(System.Collections.Generic.IList{`0})">
            <summary>
            在窗体的Load事件中调用Binding方法将导致表格定制不能正确恢复，原因未知
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.GridBind.WinForm.GridBindBase`1.Binding(System.Collections.Generic.IList{`0},System.String)">
            <summary>
            在窗体的Load事件中调用Binding方法将导致表格定制不能正确恢复，原因未知
            </summary>
            <param name="dataSourceName">表格导出时作为默认的文件名</param>
        </member>
        <member name="M:SGLibrary.Framework.GridBind.WinForm.GridBindBase`1.Binding(System.Collections.Generic.IList{`0},System.String,System.String)">
            <summary>
            
            </summary>
            <param name="dataSource"></param>
            <param name="dataSourceName">表格导出时作为默认的文件名</param>
            <param name="dataSourceKey">表格记忆时不同dataSourceKey将有不同的配置</param>
        </member>
        <member name="E:SGLibrary.Framework.GridBind.WinForm.GridBindBase`1.SelectionChanged">
            <summary>
            比DataGridView.SelectionChanged更好使：绑定新数据源，OldValue不为空不会在OldValue上触发一次；删除最后元素后也会触发
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.GridBind.WinForm.GridBindBase`1.Comparison">
            <summary>
            对象比较器
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.GridBind.WinForm.IGridViewBind`1.PositionTo(`0)">
            <summary>
            获取或设置列表中的位置
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.GridBind.WinForm.IGridViewBind`1.SelectedAll">
            <summary>
            选择所有
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.GridBind.WinForm.IGridViewBind`1.ClearSelection">
            <summary>
            取消所有的选择
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.GridBind.WinForm.IGridViewBind`1.Binding(System.Collections.Generic.IList{`0},System.String)">
            <param name="dataSourceName">导出时作为默认文件名</param>
        </member>
        <member name="M:SGLibrary.Framework.GridBind.WinForm.IGridViewBind`1.Binding(System.Collections.Generic.IList{`0},System.String,System.String)">
            <param name="dataSourceKey">保存表格配制会包括此dataSourceKey</param>
        </member>
        <member name="M:SGLibrary.Framework.GridBind.WinForm.IGridViewBind`1.Clear">
            <summary>
            清除所有绑定对象
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.GridBind.WinForm.IGridViewBind`1.ExportToExcel(System.String)">
            <summary>
            成功返回的Text为文件名，失败则为错误信息
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.GridBind.WinForm.IGridViewBind`1.Count">
            <summary>
            行数量
            </summary>
        </member>
        <member name="E:SGLibrary.Framework.GridBind.WinForm.IGridViewBind`1.CountChanged">
            <summary>
            行数量变动
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.GridBind.WinForm.IGridViewBind`1.Position">
            <summary>
            获取或设置列表中的位置
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.GridBind.WinForm.IGridViewBind`1.CurrentIsTop">
            <summary>
            当前行为顶行
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.GridBind.WinForm.IGridViewBind`1.CurrentIsEnd">
            <summary>
            当前行为底行
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.GridBind.WinForm.IGridViewBind`1.IsOnlyOneSelect">
            <summary>
            当前仅选中一个行
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.GridBind.WinForm.IGridViewBind`1.HasSelected">
            <summary>
            有选中行
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.GridBind.WinForm.IGridViewBind`1.Current">
            <summary>
            获取或设置列表中的当前项
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.GridBind.WinForm.IGridViewBind`1.CurrentSelect">
            <summary>
            当前所选(Current总是存在，但不一定被选择)
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.GridBind.WinForm.IGridViewBind`1.SelectedObjects">
            <summary>
            所选择的数据
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.GridBind.WinForm.GridViewBind`1.SelectedAll">
            <summary>
            选择所有
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.GridBind.WinForm.GridViewBind`1.ClearSelection">
            <summary>
            取消所有的选择
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.GridBind.WinForm.GridViewBind`1.Clear">
            <summary>
            清除所有绑定对象
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.GridBind.WinForm.GridViewBind`1.#ctor(System.Windows.Forms.DataGridView,SGLibrary.Framework.Config.IConfig,SGLibrary.Framework.GridBind.IBindToExcel,System.Int32,SGLibrary.Framework.GridBind.IGridBindColumnMng)">
            <summary>
            Load中装载数据将导致表格记忆的错误，请放在Shown中
            new GridBindColumnMngImplV1(new AttributeProviderOrmProperty2GridBindColumn(),
              new AttributeProviderExcelColumn2GridBindColumn())
              
            new GridBindColumnMngImpl_Appoint(params GridBindColumnAndPropertyMap[] columnProperties)
            </summary>
            <param name="config">如果希望不同数据不同配置，请在Binding方法设置数据相关的dataSourceKey</param>
        </member>
        <member name="P:SGLibrary.Framework.GridBind.WinForm.GridViewBind`1.Current">
            <summary>
            获取或设置列表中的当前项
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.GridBind.WinForm.GridViewBind`1.CurrentSelect">
            <summary>
            当前所选(Current总是存在，但不一定被选则)
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.GridBind.WinForm.GridViewBind`1.Position">
            <summary>
            获取或设置列表中的位置，无数据源返回-1，设置set可以为任意值
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.GridBind.WinForm.GridViewBind`1.IsOnlyOneSelect">
            <summary>
            当前仅选中一个行
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.GridBind.WinForm.GridViewBind`1.HasSelected">
            <summary>
            有选中行
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.GridBind.WinForm.GridViewBind`1.SelectedObjects">
            <summary>
            获取、设置选中的对象
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.ORM.OrmLogger.Log">
            <summary>
            DB访问的日志
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.ConstTreeBuilder">
            <summary>
            构建常量树,用来处理权限\业务日志\业务消息
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ConstTreeBuilder.GetTree(System.Type,System.Int32[])">
            <summary>
            获取树，未指定场景则全部
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ConstTreeBuilder.MarkChildItemsChecked(SGLibrary.Framework.ConstTreeNode,System.Boolean)">
            <summary>
            遍历子节点
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ConstTreeBuilder.SetSelect(SGLibrary.Framework.ConstTreeNode,System.Collections.Generic.IList{System.Int32})">
            <summary>
            设置树的选择，不会设置Id为0的
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ConstTreeBuilder.GetSelect(SGLibrary.Framework.ConstTreeNode)">
            <summary>
            获取树的选择，不会取Id为0的
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ConstTreeBuilder.GetTreeNode(System.Type,System.Int32)">
            <summary>
            根据常量Id，获取节点
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ConstTreeBuilder.GetTreeNode(System.Type,System.Type)">
            <summary>
            根据类型，获取节点
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ConstTreeBuilder.BuileConstTreeByClass(System.Type,SGLibrary.Framework.ConstTreeDataBag)">
            <summary>
            构建树，Id与Description的对应关系会加入descriptDict，将被递归调用，所以传type
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.ConstTreeSceneAttribute">
            <summary>
            场景：如权限可以分为适用于经销商的、适用于公司员工的、都适用的等
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Win32Ex.FindWindow.FindChildClassHwnd(System.IntPtr,System.IntPtr)">
            
            <summary>
            Find the child window, if found m_classname will be assigned 
            </summary>
            <param name="hwndParent">parent's handle</param>
            <param name="lParam">the application value, nonuse</param>
            <returns>found or not found</returns>
        </member>
        <member name="T:SGLibrary.Framework.Win32Ex.KeyboardHookLib">
            <summary> 
            键盘Hook管理类, by www.vjsdn.com 易学原创 
            </summary> 
        </member>
        <member name="M:SGLibrary.Framework.Win32Ex.KeyboardHookLib.InstallHook(SGLibrary.Framework.Win32Ex.KeyboardHookLib.ProcessKeyHandle)">
            <summary> 
            安装勾子 
            </summary> 
            <param name="clientMethod">外部调用的键盘处理事件</param> 
        </member>
        <member name="T:sharphook.Win32API.WM">
            <summary>
            Windows Messages
            Defined in winuser.h from Windows SDK v6.1
            Documentation pulled from MSDN.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.NULL">
            <summary>
            The WM_NULL message performs no operation. An application sends the WM_NULL message if it wants to post a message that the recipient window will ignore.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.CREATE">
            <summary>
            The WM_CREATE message is sent when an application requests that a window be created by calling the CreateWindowEx or CreateWindow function. (The message is sent before the function returns.) The window procedure of the new window receives this message after the window is created, but before the window becomes visible.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.DESTROY">
            <summary>
            The WM_DESTROY message is sent when a window is being destroyed. It is sent to the window procedure of the window being destroyed after the window is removed from the screen.
            This message is sent first to the window being destroyed and then to the child windows (if any) as they are destroyed. During the processing of the message, it can be assumed that all child windows still exist.
            /// </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.MOVE">
            <summary>
            The WM_MOVE message is sent after a window has been moved.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.SIZE">
            <summary>
            The WM_SIZE message is sent to a window after its size has changed.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.ACTIVATE">
            <summary>
            The WM_ACTIVATE message is sent to both the window being activated and the window being deactivated. If the windows use the same input queue, the message is sent synchronously, first to the window procedure of the top-level window being deactivated, then to the window procedure of the top-level window being activated. If the windows use different input queues, the message is sent asynchronously, so the window is activated immediately.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.SETFOCUS">
            <summary>
            The WM_SETFOCUS message is sent to a window after it has gained the keyboard focus.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.KILLFOCUS">
            <summary>
            The WM_KILLFOCUS message is sent to a window immediately before it loses the keyboard focus.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.ENABLE">
            <summary>
            The WM_ENABLE message is sent when an application changes the enabled state of a window. It is sent to the window whose enabled state is changing. This message is sent before the EnableWindow function returns, but after the enabled state (WS_DISABLED style bit) of the window has changed.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.SETREDRAW">
            <summary>
            An application sends the WM_SETREDRAW message to a window to allow changes in that window to be redrawn or to prevent changes in that window from being redrawn.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.SETTEXT">
            <summary>
            An application sends a WM_SETTEXT message to set the text of a window.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.GETTEXT">
            <summary>
            An application sends a WM_GETTEXT message to copy the text that corresponds to a window into a buffer provided by the caller.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.GETTEXTLENGTH">
            <summary>
            An application sends a WM_GETTEXTLENGTH message to determine the length, in characters, of the text associated with a window.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.PAINT">
            <summary>
            The WM_PAINT message is sent when the system or another application makes a request to paint a portion of an application's window. The message is sent when the UpdateWindow or RedrawWindow function is called, or by the DispatchMessage function when the application obtains a WM_PAINT message by using the GetMessage or PeekMessage function.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.CLOSE">
            <summary>
            The WM_CLOSE message is sent as a signal that a window or an application should terminate.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.QUERYENDSESSION">
            <summary>
            The WM_QUERYENDSESSION message is sent when the user chooses to end the session or when an application calls one of the system shutdown functions. If any application returns zero, the session is not ended. The system stops sending WM_QUERYENDSESSION messages as soon as one application returns zero.
            After processing this message, the system sends the WM_ENDSESSION message with the wParam parameter set to the results of the WM_QUERYENDSESSION message.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.QUERYOPEN">
            <summary>
            The WM_QUERYOPEN message is sent to an icon when the user requests that the window be restored to its previous size and position.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.ENDSESSION">
            <summary>
            The WM_ENDSESSION message is sent to an application after the system processes the results of the WM_QUERYENDSESSION message. The WM_ENDSESSION message informs the application whether the session is ending.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.QUIT">
            <summary>
            The WM_QUIT message indicates a request to terminate an application and is generated when the application calls the PostQuitMessage function. It causes the GetMessage function to return zero.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.ERASEBKGND">
            <summary>
            The WM_ERASEBKGND message is sent when the window background must be erased (for example, when a window is resized). The message is sent to prepare an invalidated portion of a window for painting.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.SYSCOLORCHANGE">
            <summary>
            This message is sent to all top-level windows when a change is made to a system color setting.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.SHOWWINDOW">
            <summary>
            The WM_SHOWWINDOW message is sent to a window when the window is about to be hidden or shown.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.WININICHANGE">
            <summary>
            An application sends the WM_WININICHANGE message to all top-level windows after making a change to the WIN.INI file. The SystemParametersInfo function sends this message after an application uses the function to change a setting in WIN.INI.
            Note  The WM_WININICHANGE message is provided only for compatibility with earlier versions of the system. Applications should use the WM_SETTINGCHANGE message.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.SETTINGCHANGE">
            <summary>
            An application sends the WM_WININICHANGE message to all top-level windows after making a change to the WIN.INI file. The SystemParametersInfo function sends this message after an application uses the function to change a setting in WIN.INI.
            Note  The WM_WININICHANGE message is provided only for compatibility with earlier versions of the system. Applications should use the WM_SETTINGCHANGE message.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.DEVMODECHANGE">
            <summary>
            The WM_DEVMODECHANGE message is sent to all top-level windows whenever the user changes device-mode settings.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.ACTIVATEAPP">
            <summary>
            The WM_ACTIVATEAPP message is sent when a window belonging to a different application than the active window is about to be activated. The message is sent to the application whose window is being activated and to the application whose window is being deactivated.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.FONTCHANGE">
            <summary>
            An application sends the WM_FONTCHANGE message to all top-level windows in the system after changing the pool of font resources.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.TIMECHANGE">
            <summary>
            A message that is sent whenever there is a change in the system time.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.CANCELMODE">
            <summary>
            The WM_CANCELMODE message is sent to cancel certain modes, such as mouse capture. For example, the system sends this message to the active window when a dialog box or message box is displayed. Certain functions also send this message explicitly to the specified window regardless of whether it is the active window. For example, the EnableWindow function sends this message when disabling the specified window.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.SETCURSOR">
            <summary>
            The WM_SETCURSOR message is sent to a window if the mouse causes the cursor to move within a window and mouse input is not captured.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.MOUSEACTIVATE">
            <summary>
            The WM_MOUSEACTIVATE message is sent when the cursor is in an inactive window and the user presses a mouse button. The parent window receives this message only if the child window passes it to the DefWindowProc function.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.CHILDACTIVATE">
            <summary>
            The WM_CHILDACTIVATE message is sent to a child window when the user clicks the window's title bar or when the window is activated, moved, or sized.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.QUEUESYNC">
            <summary>
            The WM_QUEUESYNC message is sent by a computer-based training (CBT) application to separate user-input messages from other messages sent through the WH_JOURNALPLAYBACK Hook procedure.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.GETMINMAXINFO">
            <summary>
            The WM_GETMINMAXINFO message is sent to a window when the size or position of the window is about to change. An application can use this message to override the window's default maximized size and position, or its default minimum or maximum tracking size.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.PAINTICON">
            <summary>
            Windows NT 3.51 and earlier: The WM_PAINTICON message is sent to a minimized window when the icon is to be painted. This message is not sent by newer versions of Microsoft Windows, except in unusual circumstances explained in the Remarks.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.ICONERASEBKGND">
            <summary>
            Windows NT 3.51 and earlier: The WM_ICONERASEBKGND message is sent to a minimized window when the background of the icon must be filled before painting the icon. A window receives this message only if a class icon is defined for the window; otherwise, WM_ERASEBKGND is sent. This message is not sent by newer versions of Windows.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.NEXTDLGCTL">
            <summary>
            The WM_NEXTDLGCTL message is sent to a dialog box procedure to set the keyboard focus to a different control in the dialog box.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.SPOOLERSTATUS">
            <summary>
            The WM_SPOOLERSTATUS message is sent from Print Manager whenever a job is added to or removed from the Print Manager queue.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.DRAWITEM">
            <summary>
            The WM_DRAWITEM message is sent to the parent window of an owner-drawn button, combo box, list box, or menu when a visual aspect of the button, combo box, list box, or menu has changed.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.MEASUREITEM">
            <summary>
            The WM_MEASUREITEM message is sent to the owner window of a combo box, list box, list view control, or menu item when the control or menu is created.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.DELETEITEM">
            <summary>
            Sent to the owner of a list box or combo box when the list box or combo box is destroyed or when items are removed by the LB_DELETESTRING, LB_RESETCONTENT, CB_DELETESTRING, or CB_RESETCONTENT message. The system sends a WM_DELETEITEM message for each deleted item. The system sends the WM_DELETEITEM message for any deleted list box or combo box item with nonzero item data.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.VKEYTOITEM">
            <summary>
            Sent by a list box with the LBS_WANTKEYBOARDINPUT style to its owner in response to a WM_KEYDOWN message.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.CHARTOITEM">
            <summary>
            Sent by a list box with the LBS_WANTKEYBOARDINPUT style to its owner in response to a WM_CHAR message.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.SETFONT">
            <summary>
            An application sends a WM_SETFONT message to specify the font that a control is to use when drawing text.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.GETFONT">
            <summary>
            An application sends a WM_GETFONT message to a control to retrieve the font with which the control is currently drawing its text.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.SETHOTKEY">
            <summary>
            An application sends a WM_SETHOTKEY message to a window to associate a hot key with the window. When the user presses the hot key, the system activates the window.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.GETHOTKEY">
            <summary>
            An application sends a WM_GETHOTKEY message to determine the hot key associated with a window.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.QUERYDRAGICON">
            <summary>
            The WM_QUERYDRAGICON message is sent to a minimized (iconic) window. The window is about to be dragged by the user but does not have an icon defined for its class. An application can return a handle to an icon or cursor. The system displays this cursor or icon while the user drags the icon.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.COMPAREITEM">
            <summary>
            The system sends the WM_COMPAREITEM message to determine the relative position of a new item in the sorted list of an owner-drawn combo box or list box. Whenever the application adds a new item, the system sends this message to the owner of a combo box or list box created with the CBS_SORT or LBS_SORT style.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.GETOBJECT">
            <summary>
            Active Accessibility sends the WM_GETOBJECT message to obtain information about an accessible object contained in a server application.
            Applications never send this message directly. It is sent only by Active Accessibility in response to calls to AccessibleObjectFromPoint, AccessibleObjectFromEvent, or AccessibleObjectFromWindow. However, server applications handle this message.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.COMPACTING">
            <summary>
            The WM_COMPACTING message is sent to all top-level windows when the system detects more than 12.5 percent of system time over a 30- to 60-second interval is being spent compacting memory. This indicates that system memory is low.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.COMMNOTIFY">
            <summary>
            WM_COMMNOTIFY is Obsolete for Win32-Based Applications
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.WINDOWPOSCHANGING">
            <summary>
            The WM_WINDOWPOSCHANGING message is sent to a window whose size, position, or place in the Z order is about to change as a result of a call to the SetWindowPos function or another window-management function.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.WINDOWPOSCHANGED">
            <summary>
            The WM_WINDOWPOSCHANGED message is sent to a window whose size, position, or place in the Z order has changed as a result of a call to the SetWindowPos function or another window-management function.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.POWER">
            <summary>
            Notifies applications that the system, typically a battery-powered personal computer, is about to enter a suspended mode.
            Use: POWERBROADCAST
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.COPYDATA">
            <summary>
            An application sends the WM_COPYDATA message to pass data to another application.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.CANCELJOURNAL">
            <summary>
            The WM_CANCELJOURNAL message is posted to an application when a user cancels the application's journaling activities. The message is posted with a NULL window handle.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.NOTIFY">
            <summary>
            Sent by a common control to its parent window when an event has occurred or the control requires some information.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.INPUTLANGCHANGEREQUEST">
            <summary>
            The WM_INPUTLANGCHANGEREQUEST message is posted to the window with the focus when the user chooses a new input language, either with the hotkey (specified in the Keyboard control panel application) or from the indicator on the system taskbar. An application can accept the change by passing the message to the DefWindowProc function or reject the change (and prevent it from taking place) by returning immediately.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.INPUTLANGCHANGE">
            <summary>
            The WM_INPUTLANGCHANGE message is sent to the topmost affected window after an application's input language has been changed. You should make any application-specific settings and pass the message to the DefWindowProc function, which passes the message to all first-level child windows. These child windows can pass the message to DefWindowProc to have it pass the message to their child windows, and so on.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.TCARD">
            <summary>
            Sent to an application that has initiated a training card with Microsoft Windows Help. The message informs the application when the user clicks an authorable button. An application initiates a training card by specifying the HELP_TCARD command in a call to the WinHelp function.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.HELP">
            <summary>
            Indicates that the user pressed the F1 key. If a menu is active when F1 is pressed, WM_HELP is sent to the window associated with the menu; otherwise, WM_HELP is sent to the window that has the keyboard focus. If no window has the keyboard focus, WM_HELP is sent to the currently active window.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.USERCHANGED">
            <summary>
            The WM_USERCHANGED message is sent to all windows after the user has logged on or off. When the user logs on or off, the system updates the user-specific settings. The system sends this message immediately after updating the settings.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.NOTIFYFORMAT">
            <summary>
            Determines if a window accepts ANSI or Unicode structures in the WM_NOTIFY notification message. WM_NOTIFYFORMAT messages are sent from a common control to its parent window and from the parent window to the common control.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.CONTEXTMENU">
            <summary>
            The WM_CONTEXTMENU message notifies a window that the user clicked the right mouse button (right-clicked) in the window.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.STYLECHANGING">
            <summary>
            The WM_STYLECHANGING message is sent to a window when the SetWindowLong function is about to change one or more of the window's styles.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.STYLECHANGED">
            <summary>
            The WM_STYLECHANGED message is sent to a window after the SetWindowLong function has changed one or more of the window's styles
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.DISPLAYCHANGE">
            <summary>
            The WM_DISPLAYCHANGE message is sent to all windows when the display resolution has changed.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.GETICON">
            <summary>
            The WM_GETICON message is sent to a window to retrieve a handle to the large or small icon associated with a window. The system displays the large icon in the ALT+TAB dialog, and the small icon in the window caption.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.SETICON">
            <summary>
            An application sends the WM_SETICON message to associate a new large or small icon with a window. The system displays the large icon in the ALT+TAB dialog box, and the small icon in the window caption.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.NCCREATE">
            <summary>
            The WM_NCCREATE message is sent prior to the WM_CREATE message when a window is first created.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.NCDESTROY">
            <summary>
            The WM_NCDESTROY message informs a window that its nonclient area is being destroyed. The DestroyWindow function sends the WM_NCDESTROY message to the window following the WM_DESTROY message. WM_DESTROY is used to free the allocated memory object associated with the window.
            The WM_NCDESTROY message is sent after the child windows have been destroyed. In contrast, WM_DESTROY is sent before the child windows are destroyed.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.NCCALCSIZE">
            <summary>
            The WM_NCCALCSIZE message is sent when the size and position of a window's client area must be calculated. By processing this message, an application can control the content of the window's client area when the size or position of the window changes.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.NCHITTEST">
            <summary>
            The WM_NCHITTEST message is sent to a window when the cursor moves, or when a mouse button is pressed or released. If the mouse is not captured, the message is sent to the window beneath the cursor. Otherwise, the message is sent to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.NCPAINT">
            <summary>
            The WM_NCPAINT message is sent to a window when its frame must be painted.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.NCACTIVATE">
            <summary>
            The WM_NCACTIVATE message is sent to a window when its nonclient area needs to be changed to indicate an active or inactive state.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.GETDLGCODE">
            <summary>
            The WM_GETDLGCODE message is sent to the window procedure associated with a control. By default, the system handles all keyboard input to the control; the system interprets certain types of keyboard input as dialog box navigation keys. To override this default behavior, the control can respond to the WM_GETDLGCODE message to indicate the types of input it wants to process itself.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.SYNCPAINT">
            <summary>
            The WM_SYNCPAINT message is used to synchronize painting while avoiding linking independent GUI threads.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.NCMOUSEMOVE">
            <summary>
            The WM_NCMOUSEMOVE message is posted to a window when the cursor is moved within the nonclient area of the window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.NCLBUTTONDOWN">
            <summary>
            The WM_NCLBUTTONDOWN message is posted when the user presses the left mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.NCLBUTTONUP">
            <summary>
            The WM_NCLBUTTONUP message is posted when the user releases the left mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.NCLBUTTONDBLCLK">
            <summary>
            The WM_NCLBUTTONDBLCLK message is posted when the user double-clicks the left mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.NCRBUTTONDOWN">
            <summary>
            The WM_NCRBUTTONDOWN message is posted when the user presses the right mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.NCRBUTTONUP">
            <summary>
            The WM_NCRBUTTONUP message is posted when the user releases the right mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.NCRBUTTONDBLCLK">
            <summary>
            The WM_NCRBUTTONDBLCLK message is posted when the user double-clicks the right mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.NCMBUTTONDOWN">
            <summary>
            The WM_NCMBUTTONDOWN message is posted when the user presses the middle mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.NCMBUTTONUP">
            <summary>
            The WM_NCMBUTTONUP message is posted when the user releases the middle mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.NCMBUTTONDBLCLK">
            <summary>
            The WM_NCMBUTTONDBLCLK message is posted when the user double-clicks the middle mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.NCXBUTTONDOWN">
            <summary>
            The WM_NCXBUTTONDOWN message is posted when the user presses the first or second X button while the cursor is in the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.NCXBUTTONUP">
            <summary>
            The WM_NCXBUTTONUP message is posted when the user releases the first or second X button while the cursor is in the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.NCXBUTTONDBLCLK">
            <summary>
            The WM_NCXBUTTONDBLCLK message is posted when the user double-clicks the first or second X button while the cursor is in the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.INPUT_DEVICE_CHANGE">
            <summary>
            The WM_INPUT_DEVICE_CHANGE message is sent to the window that registered to receive raw input. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.INPUT">
            <summary>
            The WM_INPUT message is sent to the window that is getting raw input.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.KEYFIRST">
            <summary>
            This message filters for keyboard messages.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.KEYDOWN">
            <summary>
            The WM_KEYDOWN message is posted to the window with the keyboard focus when a nonsystem key is pressed. A nonsystem key is a key that is pressed when the ALT key is not pressed.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.KEYUP">
            <summary>
            The WM_KEYUP message is posted to the window with the keyboard focus when a nonsystem key is released. A nonsystem key is a key that is pressed when the ALT key is not pressed, or a keyboard key that is pressed when a window has the keyboard focus.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.CHAR">
            <summary>
            The WM_CHAR message is posted to the window with the keyboard focus when a WM_KEYDOWN message is translated by the TranslateMessage function. The WM_CHAR message contains the character code of the key that was pressed.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.DEADCHAR">
            <summary>
            The WM_DEADCHAR message is posted to the window with the keyboard focus when a WM_KEYUP message is translated by the TranslateMessage function. WM_DEADCHAR specifies a character code generated by a dead key. A dead key is a key that generates a character, such as the umlaut (double-dot), that is combined with another character to form a composite character. For example, the umlaut-O character (Ö) is generated by typing the dead key for the umlaut character, and then typing the O key.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.SYSKEYDOWN">
            <summary>
            The WM_SYSKEYDOWN message is posted to the window with the keyboard focus when the user presses the F10 key (which activates the menu bar) or holds down the ALT key and then presses another key. It also occurs when no window currently has the keyboard focus; in this case, the WM_SYSKEYDOWN message is sent to the active window. The window that receives the message can distinguish between these two contexts by checking the context code in the lParam parameter.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.SYSKEYUP">
            <summary>
            The WM_SYSKEYUP message is posted to the window with the keyboard focus when the user releases a key that was pressed while the ALT key was held down. It also occurs when no window currently has the keyboard focus; in this case, the WM_SYSKEYUP message is sent to the active window. The window that receives the message can distinguish between these two contexts by checking the context code in the lParam parameter.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.SYSCHAR">
            <summary>
            The WM_SYSCHAR message is posted to the window with the keyboard focus when a WM_SYSKEYDOWN message is translated by the TranslateMessage function. It specifies the character code of a system character key — that is, a character key that is pressed while the ALT key is down.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.SYSDEADCHAR">
            <summary>
            The WM_SYSDEADCHAR message is sent to the window with the keyboard focus when a WM_SYSKEYDOWN message is translated by the TranslateMessage function. WM_SYSDEADCHAR specifies the character code of a system dead key — that is, a dead key that is pressed while holding down the ALT key.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.UNICHAR">
            <summary>
            The WM_UNICHAR message is posted to the window with the keyboard focus when a WM_KEYDOWN message is translated by the TranslateMessage function. The WM_UNICHAR message contains the character code of the key that was pressed.
            The WM_UNICHAR message is equivalent to WM_CHAR, but it uses Unicode Transformation Format (UTF)-32, whereas WM_CHAR uses UTF-16. It is designed to send or post Unicode characters to ANSI windows and it can can handle Unicode Supplementary Plane characters.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.KEYLAST">
            <summary>
            This message filters for keyboard messages.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.IME_STARTCOMPOSITION">
            <summary>
            Sent immediately before the IME generates the composition string as a result of a keystroke. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.IME_ENDCOMPOSITION">
            <summary>
            Sent to an application when the IME ends composition. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.IME_COMPOSITION">
            <summary>
            Sent to an application when the IME changes composition status as a result of a keystroke. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.INITDIALOG">
            <summary>
            The WM_INITDIALOG message is sent to the dialog box procedure immediately before a dialog box is displayed. Dialog box procedures typically use this message to initialize controls and carry out any other initialization tasks that affect the appearance of the dialog box.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.COMMAND">
            <summary>
            The WM_COMMAND message is sent when the user selects a command item from a menu, when a control sends a notification message to its parent window, or when an accelerator keystroke is translated.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.SYSCOMMAND">
            <summary>
            A window receives this message when the user chooses a command from the Window menu, clicks the maximize button, minimize button, restore button, close button, or moves the form. You can stop the form from moving by filtering this out.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.TIMER">
            <summary>
            The WM_TIMER message is posted to the installing thread's message queue when a timer expires. The message is posted by the GetMessage or PeekMessage function.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.HSCROLL">
            <summary>
            The WM_HSCROLL message is sent to a window when a scroll event occurs in the window's standard horizontal scroll bar. This message is also sent to the owner of a horizontal scroll bar control when a scroll event occurs in the control.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.VSCROLL">
            <summary>
            The WM_VSCROLL message is sent to a window when a scroll event occurs in the window's standard vertical scroll bar. This message is also sent to the owner of a vertical scroll bar control when a scroll event occurs in the control.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.INITMENU">
            <summary>
            The WM_INITMENU message is sent when a menu is about to become active. It occurs when the user clicks an item on the menu bar or presses a menu key. This allows the application to modify the menu before it is displayed.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.INITMENUPOPUP">
            <summary>
            The WM_INITMENUPOPUP message is sent when a drop-down menu or submenu is about to become active. This allows an application to modify the menu before it is displayed, without changing the entire menu.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.MENUSELECT">
            <summary>
            The WM_MENUSELECT message is sent to a menu's owner window when the user selects a menu item.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.MENUCHAR">
            <summary>
            The WM_MENUCHAR message is sent when a menu is active and the user presses a key that does not correspond to any mnemonic or accelerator key. This message is sent to the window that owns the menu.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.ENTERIDLE">
            <summary>
            The WM_ENTERIDLE message is sent to the owner window of a modal dialog box or menu that is entering an idle state. A modal dialog box or menu enters an idle state when no messages are waiting in its queue after it has processed one or more previous messages.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.MENURBUTTONUP">
            <summary>
            The WM_MENURBUTTONUP message is sent when the user releases the right mouse button while the cursor is on a menu item.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.MENUDRAG">
            <summary>
            The WM_MENUDRAG message is sent to the owner of a drag-and-drop menu when the user drags a menu item.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.MENUGETOBJECT">
            <summary>
            The WM_MENUGETOBJECT message is sent to the owner of a drag-and-drop menu when the mouse cursor enters a menu item or moves from the center of the item to the top or bottom of the item.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.UNINITMENUPOPUP">
            <summary>
            The WM_UNINITMENUPOPUP message is sent when a drop-down menu or submenu has been destroyed.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.MENUCOMMAND">
            <summary>
            The WM_MENUCOMMAND message is sent when the user makes a selection from a menu.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.CHANGEUISTATE">
            <summary>
            An application sends the WM_CHANGEUISTATE message to indicate that the user interface (UI) state should be changed.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.UPDATEUISTATE">
            <summary>
            An application sends the WM_UPDATEUISTATE message to change the user interface (UI) state for the specified window and all its child windows.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.QUERYUISTATE">
            <summary>
            An application sends the WM_QUERYUISTATE message to retrieve the user interface (UI) state for a window.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.CTLCOLORMSGBOX">
            <summary>
            The WM_CTLCOLORMSGBOX message is sent to the owner window of a message box before Windows draws the message box. By responding to this message, the owner window can set the text and background colors of the message box by using the given display device context handle.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.CTLCOLOREDIT">
            <summary>
            An edit control that is not read-only or disabled sends the WM_CTLCOLOREDIT message to its parent window when the control is about to be drawn. By responding to this message, the parent window can use the specified device context handle to set the text and background colors of the edit control.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.CTLCOLORLISTBOX">
            <summary>
            Sent to the parent window of a list box before the system draws the list box. By responding to this message, the parent window can set the text and background colors of the list box by using the specified display device context handle.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.CTLCOLORBTN">
            <summary>
            The WM_CTLCOLORBTN message is sent to the parent window of a button before drawing the button. The parent window can change the button's text and background colors. However, only owner-drawn buttons respond to the parent window processing this message.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.CTLCOLORDLG">
            <summary>
            The WM_CTLCOLORDLG message is sent to a dialog box before the system draws the dialog box. By responding to this message, the dialog box can set its text and background colors using the specified display device context handle.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.CTLCOLORSCROLLBAR">
            <summary>
            The WM_CTLCOLORSCROLLBAR message is sent to the parent window of a scroll bar control when the control is about to be drawn. By responding to this message, the parent window can use the display context handle to set the background color of the scroll bar control.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.CTLCOLORSTATIC">
            <summary>
            A static control, or an edit control that is read-only or disabled, sends the WM_CTLCOLORSTATIC message to its parent window when the control is about to be drawn. By responding to this message, the parent window can use the specified device context handle to set the text and background colors of the static control.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.MOUSEFIRST">
            <summary>
            Use WM_MOUSEFIRST to specify the first mouse message. Use the PeekMessage() Function.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.MOUSEMOVE">
            <summary>
            The WM_MOUSEMOVE message is posted to a window when the cursor moves. If the mouse is not captured, the message is posted to the window that contains the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.LBUTTONDOWN">
            <summary>
            The WM_LBUTTONDOWN message is posted when the user presses the left mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.LBUTTONUP">
            <summary>
            The WM_LBUTTONUP message is posted when the user releases the left mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.LBUTTONDBLCLK">
            <summary>
            The WM_LBUTTONDBLCLK message is posted when the user double-clicks the left mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.RBUTTONDOWN">
            <summary>
            The WM_RBUTTONDOWN message is posted when the user presses the right mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.RBUTTONUP">
            <summary>
            The WM_RBUTTONUP message is posted when the user releases the right mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.RBUTTONDBLCLK">
            <summary>
            The WM_RBUTTONDBLCLK message is posted when the user double-clicks the right mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.MBUTTONDOWN">
            <summary>
            The WM_MBUTTONDOWN message is posted when the user presses the middle mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.MBUTTONUP">
            <summary>
            The WM_MBUTTONUP message is posted when the user releases the middle mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.MBUTTONDBLCLK">
            <summary>
            The WM_MBUTTONDBLCLK message is posted when the user double-clicks the middle mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.MOUSEWHEEL">
            <summary>
            The WM_MOUSEWHEEL message is sent to the focus window when the mouse wheel is rotated. The DefWindowProc function propagates the message to the window's parent. There should be no internal forwarding of the message, since DefWindowProc propagates it up the parent chain until it finds a window that processes it.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.XBUTTONDOWN">
            <summary>
            The WM_XBUTTONDOWN message is posted when the user presses the first or second X button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.XBUTTONUP">
            <summary>
            The WM_XBUTTONUP message is posted when the user releases the first or second X button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.XBUTTONDBLCLK">
            <summary>
            The WM_XBUTTONDBLCLK message is posted when the user double-clicks the first or second X button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.MOUSEHWHEEL">
            <summary>
            The WM_MOUSEHWHEEL message is sent to the focus window when the mouse's horizontal scroll wheel is tilted or rotated. The DefWindowProc function propagates the message to the window's parent. There should be no internal forwarding of the message, since DefWindowProc propagates it up the parent chain until it finds a window that processes it.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.MOUSELAST">
            <summary>
            Use WM_MOUSELAST to specify the last mouse message. Used with PeekMessage() Function.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.PARENTNOTIFY">
            <summary>
            The WM_PARENTNOTIFY message is sent to the parent of a child window when the child window is created or destroyed, or when the user clicks a mouse button while the cursor is over the child window. When the child window is being created, the system sends WM_PARENTNOTIFY just before the CreateWindow or CreateWindowEx function that creates the window returns. When the child window is being destroyed, the system sends the message before any processing to destroy the window takes place.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.ENTERMENULOOP">
            <summary>
            The WM_ENTERMENULOOP message informs an application's main window procedure that a menu modal loop has been entered.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.EXITMENULOOP">
            <summary>
            The WM_EXITMENULOOP message informs an application's main window procedure that a menu modal loop has been exited.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.NEXTMENU">
            <summary>
            The WM_NEXTMENU message is sent to an application when the right or left arrow key is used to switch between the menu bar and the system menu.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.SIZING">
            <summary>
            The WM_SIZING message is sent to a window that the user is resizing. By processing this message, an application can monitor the size and position of the drag rectangle and, if needed, change its size or position.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.CAPTURECHANGED">
            <summary>
            The WM_CAPTURECHANGED message is sent to the window that is losing the mouse capture.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.MOVING">
            <summary>
            The WM_MOVING message is sent to a window that the user is moving. By processing this message, an application can monitor the position of the drag rectangle and, if needed, change its position.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.POWERBROADCAST">
            <summary>
            Notifies applications that a power-management event has occurred.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.DEVICECHANGE">
            <summary>
            Notifies an application of a change to the hardware configuration of a device or the computer.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.MDICREATE">
            <summary>
            An application sends the WM_MDICREATE message to a multiple-document interface (MDI) client window to create an MDI child window.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.MDIDESTROY">
            <summary>
            An application sends the WM_MDIDESTROY message to a multiple-document interface (MDI) client window to close an MDI child window.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.MDIACTIVATE">
            <summary>
            An application sends the WM_MDIACTIVATE message to a multiple-document interface (MDI) client window to instruct the client window to activate a different MDI child window.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.MDIRESTORE">
            <summary>
            An application sends the WM_MDIRESTORE message to a multiple-document interface (MDI) client window to restore an MDI child window from maximized or minimized size.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.MDINEXT">
            <summary>
            An application sends the WM_MDINEXT message to a multiple-document interface (MDI) client window to activate the next or previous child window.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.MDIMAXIMIZE">
            <summary>
            An application sends the WM_MDIMAXIMIZE message to a multiple-document interface (MDI) client window to maximize an MDI child window. The system resizes the child window to make its client area fill the client window. The system places the child window's window menu icon in the rightmost position of the frame window's menu bar, and places the child window's restore icon in the leftmost position. The system also appends the title bar text of the child window to that of the frame window.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.MDITILE">
            <summary>
            An application sends the WM_MDITILE message to a multiple-document interface (MDI) client window to arrange all of its MDI child windows in a tile format.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.MDICASCADE">
            <summary>
            An application sends the WM_MDICASCADE message to a multiple-document interface (MDI) client window to arrange all its child windows in a cascade format.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.MDIICONARRANGE">
            <summary>
            An application sends the WM_MDIICONARRANGE message to a multiple-document interface (MDI) client window to arrange all minimized MDI child windows. It does not affect child windows that are not minimized.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.MDIGETACTIVE">
            <summary>
            An application sends the WM_MDIGETACTIVE message to a multiple-document interface (MDI) client window to retrieve the handle to the active MDI child window.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.MDISETMENU">
            <summary>
            An application sends the WM_MDISETMENU message to a multiple-document interface (MDI) client window to replace the entire menu of an MDI frame window, to replace the window menu of the frame window, or both.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.ENTERSIZEMOVE">
            <summary>
            The WM_ENTERSIZEMOVE message is sent one time to a window after it enters the moving or sizing modal loop. The window enters the moving or sizing modal loop when the user clicks the window's title bar or sizing border, or when the window passes the WM_SYSCOMMAND message to the DefWindowProc function and the wParam parameter of the message specifies the SC_MOVE or SC_SIZE value. The operation is complete when DefWindowProc returns.
            The system sends the WM_ENTERSIZEMOVE message regardless of whether the dragging of full windows is enabled.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.EXITSIZEMOVE">
            <summary>
            The WM_EXITSIZEMOVE message is sent one time to a window, after it has exited the moving or sizing modal loop. The window enters the moving or sizing modal loop when the user clicks the window's title bar or sizing border, or when the window passes the WM_SYSCOMMAND message to the DefWindowProc function and the wParam parameter of the message specifies the SC_MOVE or SC_SIZE value. The operation is complete when DefWindowProc returns.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.DROPFILES">
            <summary>
            Sent when the user drops a file on the window of an application that has registered itself as a recipient of dropped files.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.MDIREFRESHMENU">
            <summary>
            An application sends the WM_MDIREFRESHMENU message to a multiple-document interface (MDI) client window to refresh the window menu of the MDI frame window.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.IME_SETCONTEXT">
            <summary>
            Sent to an application when a window is activated. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.IME_NOTIFY">
            <summary>
            Sent to an application to notify it of changes to the IME window. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.IME_CONTROL">
            <summary>
            Sent by an application to direct the IME window to carry out the requested command. The application uses this message to control the IME window that it has created. To send this message, the application calls the SendMessage function with the following parameters.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.IME_COMPOSITIONFULL">
            <summary>
            Sent to an application when the IME window finds no space to extend the area for the composition window. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.IME_SELECT">
            <summary>
            Sent to an application when the operating system is about to change the current IME. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.IME_CHAR">
            <summary>
            Sent to an application when the IME gets a character of the conversion result. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.IME_REQUEST">
            <summary>
            Sent to an application to provide commands and request information. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.IME_KEYDOWN">
            <summary>
            Sent to an application by the IME to notify the application of a key press and to keep message order. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.IME_KEYUP">
            <summary>
            Sent to an application by the IME to notify the application of a key release and to keep message order. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.MOUSEHOVER">
            <summary>
            The WM_MOUSEHOVER message is posted to a window when the cursor hovers over the client area of the window for the period of time specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.MOUSELEAVE">
            <summary>
            The WM_MOUSELEAVE message is posted to a window when the cursor leaves the client area of the window specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.NCMOUSEHOVER">
            <summary>
            The WM_NCMOUSEHOVER message is posted to a window when the cursor hovers over the nonclient area of the window for the period of time specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.NCMOUSELEAVE">
            <summary>
            The WM_NCMOUSELEAVE message is posted to a window when the cursor leaves the nonclient area of the window specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.WTSSESSION_CHANGE">
            <summary>
            The WM_WTSSESSION_CHANGE message notifies applications of changes in session state.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.CUT">
            <summary>
            An application sends a WM_CUT message to an edit control or combo box to delete (cut) the current selection, if any, in the edit control and copy the deleted text to the clipboard in CF_TEXT format.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.COPY">
            <summary>
            An application sends the WM_COPY message to an edit control or combo box to copy the current selection to the clipboard in CF_TEXT format.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.PASTE">
            <summary>
            An application sends a WM_PASTE message to an edit control or combo box to copy the current content of the clipboard to the edit control at the current caret position. Data is inserted only if the clipboard contains data in CF_TEXT format.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.CLEAR">
            <summary>
            An application sends a WM_CLEAR message to an edit control or combo box to delete (clear) the current selection, if any, from the edit control.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.UNDO">
            <summary>
            An application sends a WM_UNDO message to an edit control to undo the last operation. When this message is sent to an edit control, the previously deleted text is restored or the previously added text is deleted.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.RENDERFORMAT">
            <summary>
            The WM_RENDERFORMAT message is sent to the clipboard owner if it has delayed rendering a specific clipboard format and if an application has requested data in that format. The clipboard owner must render data in the specified format and place it on the clipboard by calling the SetClipboardData function.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.RENDERALLFORMATS">
            <summary>
            The WM_RENDERALLFORMATS message is sent to the clipboard owner before it is destroyed, if the clipboard owner has delayed rendering one or more clipboard formats. For the content of the clipboard to remain available to other applications, the clipboard owner must render data in all the formats it is capable of generating, and place the data on the clipboard by calling the SetClipboardData function.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.DESTROYCLIPBOARD">
            <summary>
            The WM_DESTROYCLIPBOARD message is sent to the clipboard owner when a call to the EmptyClipboard function empties the clipboard.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.DRAWCLIPBOARD">
            <summary>
            The WM_DRAWCLIPBOARD message is sent to the first window in the clipboard viewer chain when the content of the clipboard changes. This enables a clipboard viewer window to display the new content of the clipboard.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.PAINTCLIPBOARD">
            <summary>
            The WM_PAINTCLIPBOARD message is sent to the clipboard owner by a clipboard viewer window when the clipboard contains data in the CF_OWNERDISPLAY format and the clipboard viewer's client area needs repainting.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.VSCROLLCLIPBOARD">
            <summary>
            The WM_VSCROLLCLIPBOARD message is sent to the clipboard owner by a clipboard viewer window when the clipboard contains data in the CF_OWNERDISPLAY format and an event occurs in the clipboard viewer's vertical scroll bar. The owner should scroll the clipboard image and update the scroll bar values.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.SIZECLIPBOARD">
            <summary>
            The WM_SIZECLIPBOARD message is sent to the clipboard owner by a clipboard viewer window when the clipboard contains data in the CF_OWNERDISPLAY format and the clipboard viewer's client area has changed size.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.ASKCBFORMATNAME">
            <summary>
            The WM_ASKCBFORMATNAME message is sent to the clipboard owner by a clipboard viewer window to request the name of a CF_OWNERDISPLAY clipboard format.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.CHANGECBCHAIN">
            <summary>
            The WM_CHANGECBCHAIN message is sent to the first window in the clipboard viewer chain when a window is being removed from the chain.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.HSCROLLCLIPBOARD">
            <summary>
            The WM_HSCROLLCLIPBOARD message is sent to the clipboard owner by a clipboard viewer window. This occurs when the clipboard contains data in the CF_OWNERDISPLAY format and an event occurs in the clipboard viewer's horizontal scroll bar. The owner should scroll the clipboard image and update the scroll bar values.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.QUERYNEWPALETTE">
            <summary>
            This message informs a window that it is about to receive the keyboard focus, giving the window the opportunity to realize its logical palette when it receives the focus.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.PALETTEISCHANGING">
            <summary>
            The WM_PALETTEISCHANGING message informs applications that an application is going to realize its logical palette.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.PALETTECHANGED">
            <summary>
            This message is sent by the OS to all top-level and overlapped windows after the window with the keyboard focus realizes its logical palette.
            This message enables windows that do not have the keyboard focus to realize their logical palettes and update their client areas.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.HOTKEY">
            <summary>
            The WM_HOTKEY message is posted when the user presses a hot key registered by the RegisterHotKey function. The message is placed at the top of the message queue associated with the thread that registered the hot key.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.PRINT">
            <summary>
            The WM_PRINT message is sent to a window to request that it draw itself in the specified device context, most commonly in a printer device context.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.PRINTCLIENT">
            <summary>
            The WM_PRINTCLIENT message is sent to a window to request that it draw its client area in the specified device context, most commonly in a printer device context.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.APPCOMMAND">
            <summary>
            The WM_APPCOMMAND message notifies a window that the user generated an application command event, for example, by clicking an application command button using the mouse or typing an application command key on the keyboard.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.THEMECHANGED">
            <summary>
            The WM_THEMECHANGED message is broadcast to every window following a theme change event. Examples of theme change events are the activation of a theme, the deactivation of a theme, or a transition from one theme to another.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.CLIPBOARDUPDATE">
            <summary>
            Sent when the contents of the clipboard have changed.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.DWMCOMPOSITIONCHANGED">
            <summary>
            The system will send a window the WM_DWMCOMPOSITIONCHANGED message to indicate that the availability of desktop composition has changed.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.DWMNCRENDERINGCHANGED">
            <summary>
            WM_DWMNCRENDERINGCHANGED is called when the non-client area rendering status of a window has changed. Only windows that have set the flag DWM_BLURBEHIND.fTransitionOnMaximized to true will get this message.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.DWMCOLORIZATIONCOLORCHANGED">
            <summary>
            Sent to all top-level windows when the colorization color has changed.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.DWMWINDOWMAXIMIZEDCHANGE">
            <summary>
            WM_DWMWINDOWMAXIMIZEDCHANGE will let you know when a DWM composed window is maximized. You also have to register for this message as well. You'd have other windowd go opaque when this message is sent.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.GETTITLEBARINFOEX">
            <summary>
            Sent to request extended title bar information. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.APP">
            <summary>
            The WM_APP constant is used by applications to help define private messages, usually of the form WM_APP+X, where X is an integer value.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.USER">
            <summary>
            The WM_USER constant is used by applications to help define private messages for use by private window classes, usually of the form WM_USER+X, where X is an integer value.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.CPL_LAUNCH">
            <summary>
            An application sends the WM_CPL_LAUNCH message to Windows Control Panel to request that a Control Panel application be started.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.CPL_LAUNCHED">
            <summary>
            The WM_CPL_LAUNCHED message is sent when a Control Panel application, started by the WM_CPL_LAUNCH message, has closed. The WM_CPL_LAUNCHED message is sent to the window identified by the wParam parameter of the WM_CPL_LAUNCH message that started the application.
            </summary>
        </member>
        <member name="F:sharphook.Win32API.WM.SYSTIMER">
            <summary>
            WM_SYSTIMER is a well-known yet still undocumented message. Windows uses WM_SYSTIMER for internal actions like scrolling.
            </summary>
        </member>
        <member name="T:SGLibrary.StringStreamSeparator">
            <summary>
            持续Push，遇到separator则按小节Pop(virtual)
            </summary>
        </member>
        <member name="M:SGLibrary.StringStreamSeparator.Push(System.String)">
            <summary>
            压进缓冲区，如果有有效小节则Pop
            </summary>
        </member>
        <member name="M:SGLibrary.StringStreamSeparator.PopAll">
            <summary>
            弹出缓冲区全部的
            </summary>
        </member>
        <member name="T:SGLibrary.Trick.BufferDictionary`2">
            <summary>
            一个缓存器
            </summary>
        </member>
        <member name="M:SGLibrary.Trick.BufferDictionary`2.#ctor(SGLibrary.Trick.FunGetter{`0,`1},System.Int32)">
            <summary>
            life: 单位秒
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.AnchorQueue`1">
            <summary>
            一个限制容量的List
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:SGLibrary.Extend.ArrayToGIList`1.CopyTo(`0[],System.Int32)">
            <summary>
            复制到兼容的一维数组中，从目标数组的指定索引位置开始放置。
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.ExDict`2">
            <summary>
                为Dictionary&lt;TKey, TValue&gt;添加更方便的构造函数
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExIList.ToList``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            有可能是as 有可能是new List
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.CompareImplSimpleness`1">
            <summary>
            简单的排序，只对对象的某属性排序
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.CompareImplComplex`1">
            <summary>
            复杂排序，支持：类.属性.属性
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.IdObjectSet`1">
            <summary>
            通过Id识别的对象集合，不会保存null
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.KeyClassDict`3">
            <summary>
                .Net没有类类型，没办法掰个将就用
                缺点:类必须有无参构造函数
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.KeyClassDict`3.Add(`0,System.Type,`2)">
            <summary>
                通过tag可以保存点与type相关的常量等,方便CreateInstance前后的操作 
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.KeyClassDict`3.Tags">
            <summary>
                C#不能定义任意的索引器,只能这样别扭着
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.KeyDict`2">
            <summary>
            处理ID/对象的缓冲
            </summary>
        </member>
        <member name="F:SGLibrary.Extend.ControlEx.HandyTextBox.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ControlEx.HandyTextBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SGLibrary.Extend.ControlEx.HandyTextBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.ControlEx.PictureButton">
            <summary>
            贴图的按钮
            </summary>
        </member>
        <member name="F:SGLibrary.Extend.ControlEx.PictureButton.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ControlEx.PictureButton.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SGLibrary.Extend.ControlEx.PictureButton.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:SGLibrary.Extend.ControlEx.ExButton.PictureButtonA.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ControlEx.ExButton.PictureButtonA.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SGLibrary.Extend.ControlEx.ExButton.PictureButtonA.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.ControlEx.ShadowButton">
            <summary>
            带阴影的按钮
            </summary>
        </member>
        <member name="F:SGLibrary.Extend.ControlEx.ShadowButton.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ControlEx.ShadowButton.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SGLibrary.Extend.ControlEx.ShadowButton.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.ControlEx.ShadowButtonGroup">
            <summary>
            带阴影的按钮组
            </summary>
        </member>
        <member name="F:SGLibrary.Extend.ControlEx.ShadowButtonGroup.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ControlEx.ShadowButtonGroup.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SGLibrary.Extend.ControlEx.ShadowButtonGroup.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ControlEx.ExComboBox.FindKeyTextItem``1(System.Windows.Forms.ComboBox.ObjectCollection,``0)">
            <summary>
            对Item是ValueText&lt;T&gt;类型的找到对应的Value
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ControlEx.IMemoryForm.GetRemValue">
            <summary>
            返回null则不会被记忆
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ControlEx.IMemoryForm.SetRemValue(System.String)">
            <summary>
            Value一定不为空
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ControlEx.InputStringFm.GetInputString(System.String,System.String,System.Char)">
            <summary>
            不显示*则用(Char)0
            </summary>
            <param name="title">标题</param>
        </member>
        <member name="F:SGLibrary.Extend.ControlEx.InputStringFm.components">
            <summary>
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ControlEx.InputStringFm.Dispose(System.Boolean)">
            <summary>
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:SGLibrary.Extend.ControlEx.InputStringFm.InitializeComponent">
            <summary>
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.ControlEx.MinuteSecond">
            <summary>
            分秒输入
            </summary>
        </member>
        <member name="F:SGLibrary.Extend.ControlEx.MinuteSecond.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ControlEx.MinuteSecond.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:SGLibrary.Extend.ControlEx.MinuteSecond.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.ControlEx.PhoneDialer">
            <summary>
            电话号码输入
            </summary>
        </member>
        <member name="F:SGLibrary.Extend.ControlEx.PhoneDialer.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ControlEx.PhoneDialer.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SGLibrary.Extend.ControlEx.PhoneDialer.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:SGLibrary.Extend.ControlEx.SetUrlFm.components">
            <summary>
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ControlEx.SetUrlFm.Dispose(System.Boolean)">
            <summary>
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:SGLibrary.Extend.ControlEx.SetUrlFm.InitializeComponent">
            <summary>
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="F:SGLibrary.Extend.ControlEx.ShowListFm.components">
            <summary>
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ControlEx.ShowListFm.Dispose(System.Boolean)">
            <summary>
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:SGLibrary.Extend.ControlEx.ShowListFm.InitializeComponent">
            <summary>
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="F:SGLibrary.Extend.ControlEx.ShowProgressFm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ControlEx.ShowProgressFm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SGLibrary.Extend.ControlEx.ShowProgressFm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:SGLibrary.Extend.ControlEx.ShowStrFm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ControlEx.ShowStrFm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SGLibrary.Extend.ControlEx.ShowStrFm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SGLibrary.DB.DbAccessImpl.NewParameter(System.Data.IDbCommand,System.String,System.Object)">
            <summary>
                特别注意：参数顺序要与SQL中的一致！
            应该是我什么地方出错了，有空再研究
            </summary>
        </member>
        <member name="T:SGLibrary.DB.DbConnProviderImpl_MSAccessOleDB">
            <summary>
            用于MSAccess，问题多多
            记得加如下语句保证Access的关闭：
            Application.ApplicationExit += DBConnProvider_MSAccessOleDB.Close;
            在Web应用中当心并发问题
            </summary>
        </member>
        <member name="M:SGLibrary.DB.IDbConnProvider.GetDbDialect">
            <summary>
            数据库方言
            </summary>
        </member>
        <member name="P:SGLibrary.DB.IDbConnProvider.CommandTimeout">
            <summary>
            注意ConnectTimeOut不能决定执行Sql语句的超时, 必须使用CommandTimeout
            </summary>
        </member>
        <member name="F:SGLibrary.DB.DbConnProviderImpl_MSAccessOleDB.ConnStrtringTemplate">
            <summary>
            连接串模板  Provider=Microsoft.Jet.OLEDB.4.0;Data Source={0};Mode=ReadWrite|Share Deny None;Persist Security Info=True
            </summary>
        </member>
        <member name="F:SGLibrary.DB.DbConnProviderImpl_MSSQLServer.ConnStrtringTemplate">
            <summary>
            连接串模板  Data Source={0};Initial Catalog={1};Persist Security Info=True;User ID={2};Password={3};Min Pool Size={4}
            </summary>
        </member>
        <member name="T:SGLibrary.DB.DbCrud">
            <summary>
            DB的增删改查
            </summary>
        </member>
        <member name="F:SGLibrary.DB.DbCrud.Unknown">
            <summary>
            未知(留给对方处理)
            </summary>
        </member>
        <member name="F:SGLibrary.DB.DbCrud.Create">
            <summary>
            添加
            </summary>
        </member>
        <member name="F:SGLibrary.DB.DbCrud.Delete">
            <summary>
            删除
            </summary>
        </member>
        <member name="F:SGLibrary.DB.DbCrud.Update">
            <summary>
            更新
            </summary>
        </member>
        <member name="F:SGLibrary.DB.DbCrud.Retrieve">
            <summary>
            查询
            </summary>
        </member>
        <member name="M:SGLibrary.DB.ExDb.DataTableTranspose(System.Data.DataTable,System.Int32,System.String)">
            <summary>
            DataTable的行列转置
            newClmNameFromOldClmIdx列的值变成列名，列名变成第一列的值，oldClmNameClmName为新的第一列列名
            类似Excel中选择性粘贴，转置
            </summary>
        </member>
        <member name="P:SGLibrary.DB.ExDb.TransactSqlMinDateTime">
            <summary>
            TransactSql时间之最小值, 小于此数据库出错
            </summary>
        </member>
        <member name="P:SGLibrary.DB.ExDb.OleDbMinDateTime">
            <summary>
            OleDb时间之最小值, 小于此数据库出错
            </summary>
        </member>
        <member name="M:SGLibrary.DB.ExGridView.ToStringArray(System.Windows.Forms.DataGridView)">
            <summary>
            调试用的方法, 隐藏列也输出
            </summary>
        </member>
        <member name="M:SGLibrary.DB.ExGridView.positionToId(System.Windows.Forms.DataGridView,System.Int64,System.Int32)">
            <summary>
                通过一个Id定位到表格的具体行
            </summary>
        </member>
        <member name="M:SGLibrary.DB.ExGridView.GridFilter(System.Windows.Forms.DataGridView,System.String)">
            <summary>
                过滤表格行，所有行都参与过滤，不显示的列不参与过滤，Filter为空显示所有行
            过滤条件是简单包含，不存在统配符
            </summary>
        </member>
        <member name="F:ExportProcedure.MainFm.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:ExportProcedure.MainFm.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:ExportProcedure.MainFm.InitializeComponent">
            <summary>
            此為設計工具支援所需的方法 - 請勿使用程式碼編輯器
            修改這個方法的內容。
            </summary>
        </member>
        <member name="M:SGLibrary.DB.ExSql.GetTopSQLStr(System.Int32)">
            <summary>
            获取设置返回记录数的SQL子句
            </summary>
        </member>
        <member name="M:SGLibrary.DB.ExSql.GetToDateSql(System.String)">
            <summary>
            拼SQL用
            </summary>
        </member>
        <member name="M:SGLibrary.DB.ExSql.getDateTimeToStrSql(System.String)">
            <summary>
            SQL中取年/月/日用(在SQL中把日期时间字段转为字符串)
            </summary>
        </member>
        <member name="M:SGLibrary.DB.IDbHelper.Add_List``1(System.Collections.Generic.IList{``0})">
            <summary>
            自动生成的Id会回写入values
            可能部分成功，会跳过null
            </summary>
        </member>
        <member name="M:SGLibrary.DB.IDbHelper.Add_List_TryBulkCopy``1(System.Collections.Generic.IList{``0})">
            <summary>
            尝试批量写入, 目前只有SqlServer支持, 不支持则自动以一般方式写入
            注意无法回写自增Id, 对Guid/String类PK能够自动生成
            </summary>
        </member>
        <member name="M:SGLibrary.DB.IDbHelper.Delete_List``1(System.Collections.Generic.IList{``0})">
            <summary>
            会跳过null
            </summary>
        </member>
        <member name="M:SGLibrary.DB.IDbHelper.Delete_Where``1(SGLibrary.Framework.Criterion.WhereList)">
            <summary>
            指定null不删除任何
            当前实现当有外连接时多表联合删除有潜在问题的！！！
            </summary>
        </member>
        <member name="M:SGLibrary.DB.IDbHelper.Update``1(``0,System.String[])">
            <summary>
            只更新指定的属性，未指定则更新所有
            </summary>
        </member>
        <member name="M:SGLibrary.DB.IDbHelper.Update_List``1(System.Collections.Generic.IList{``0},System.String[])">
            <summary>
            可能部分成功，会跳过null
            </summary>
        </member>
        <member name="M:SGLibrary.DB.IDbHelper.Get_Where``1(SGLibrary.Framework.Criterion.WhereList,System.Collections.Generic.IList{SGLibrary.Framework.Criterion.OrderNode})">
            <summary>
            无符合条件的返回null，否则返回第一个
            </summary>
        </member>
        <member name="M:SGLibrary.DB.IDbHelper.Query_Paging``1(SGLibrary.Framework.Criterion.WhereList,System.Collections.Generic.IList{SGLibrary.Framework.Criterion.OrderNode},System.Int32,System.Int32)">
            <summary>
            分页查询，注意pageIndex 0起点
            </summary>
        </member>
        <member name="T:SGLibrary.Excel.ExcelAccess_OledbJet">
            <summary>
            需要Mircrosoft.ace.oledb.12.0驱动以便使用Ace访问Excel
            </summary>
        </member>
        <member name="M:SGLibrary.Excel.ExcelAccess_OledbJet.TryListExcelSheets(System.String)">
            <summary>
            使用Jet列出Excel文件的所有Sheet, 注意返回的有"FilterDatabase"结尾的隐含Sheet
            </summary>
        </member>
        <member name="M:SGLibrary.Excel.ExcelAccess_OledbJet.TryLoadExcelData(System.String,System.String)">
            <summary>
            使用Jet装载Excel的数据
            </summary>
        </member>
        <member name="M:SGLibrary.Excel.ExcelAccess_OledbJet.LoadExcelData(System.String,System.String)">
            <summary>
            不能支持07版以后的格式
            </summary>
        </member>
        <member name="T:SGLibrary.DB.StrProperty2DbCheckImpl">
            <summary>
            实体写到数据库前对字符串做属性的Check
            </summary>
        </member>
        <member name="M:SGLibrary.DB.StrProperty2DbCheckImpl.GetStrPropertyCheckInfoMap(System.Type,System.String[])">
            <summary>
            获得指定属性列表中字符串属性及长度限制的列表，未指定属性则所有
            </summary>
        </member>
        <member name="F:SGLibrary.Extend.Ex.cEntter">
            <summary>
            注意从WebService返回的多行串是用\n分隔的
            推荐使用 Environment.NewLine
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.Ex.ToStr(System.Object)">
            <summary>
            null返回null
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.Ex.IsDefault(System.Object)">
            <summary>
            DateTime.MinValue\Guid.Empty
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.Ex.CompareValue(System.Object,System.Object)">
            <summary>
            通用的比较，返回x1-x2：左边小返回负
            </summary>
        </member>
        <member name="P:SGLibrary.Extend.Ex.DesignMode">
            <summary>
            是否DesignMode，UserControl嵌套时被嵌套UserControl.DesignMode总是false
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExApp.IsWinFormApp">
            <summary>
            判断是WinApp还是WebApp
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExApp_WinFm.GetAssistFileName(System.String,System.String)">
            <summary>
                获取项目辅助文件名，文件位于StartupPath，与当前应用程序名相关
            当心host到IIS获取的是IIS进程名，通常没权限写此文件的！
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExApp_WinFm.GetFullName">
            <summary>
            获取不包含路径的当前Application全名,包含扩展名
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.ExBuildListWithHexChar">
            <summary>
                把IList组合成等长的16进制串以及反向的拆解
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.ExBuildListWithSpltBase`1">
            <summary>
                把IList组合成用Spliter分隔的串以及反向的拆解
                这个想法有问题
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExBuildListWithSpltBase`1.ListToStr(System.Collections.Generic.IList{`0})">
            <summary>
                组合成字符串
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExBuildListWithSpltBase`1.StrToList(System.String)">
            <summary>
                反向的拆解
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.ExBuildListWithSplt`1">
            <summary>
                把IList组合成用Spliter分隔的串以及反向的拆解,仅处理值类型
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.ExBuildStrListWithSplt">
            <summary>
            把IList&lt;String&gt;组合成用Spliter分隔的串以及反向的拆解
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExClipboard.VS2010CopyClear">
            <summary>
            点型的剪贴板操作
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.ExClone">
            <summary>
            同名同类型属性比较与复制，使用反射并缓存之
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExClone.GetPropertyMapPackage``2">
            <summary>
            获取转换的映射描述，使用了缓存
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExClone.CopyProperty``2(``0,``1,System.String[])">
            <summary>
            复制所有同名同类型值(浅克隆)
            只读属性可以写到对应的可写属性中
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExClone.CompProperty``2(``0,``1,System.String[])">
            <summary>
            比较所有同名同类型值(浅克隆)
            包括只读属性
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExClone.ListPropertyDifferent``2(``0,``1,System.String[])">
            <summary>
            获取所有同名同类型值的变化(浅克隆)
            包括只读属性
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.ExCode">
            <summary>
            处理生活中的各种编号
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExCode.FormatMobileCode(System.String)">
            <summary>
            格式化为: 1**-****-****
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExCode.FormatFixedTelephone(System.String)">
            <summary>
            格式化为: 0**-****-****/0***-****-****/0***-***-****
            </summary>
        </member>
        <member name="P:SGLibrary.Extend.ExComponentModel.DesignMode">
            <summary>
            是否DesignMode，UserControl嵌套时被嵌套UserControl.DesignMode总是false
            用户控件嵌套，使用此方法VS2010经常发生SGPub加载错误，建议转移到本地
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExControl.GetControlParentForm(System.Windows.Forms.Control)">
            <summary>
            找到参数ctl所在的窗体
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExControl.ParentOf(System.Object,System.Windows.Forms.Control)">
            <summary>
            测试Parent是否是obj的容器
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExControl.GetTopBrotherCtlAtPoint(System.Windows.Forms.Control)">
            <summary>
            找到当前鼠标位置下与参数ctl在同一窗体的顶层控件
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExControlTab.SetTabIndex(System.Windows.Forms.Control.ControlCollection)">
            <summary>
              从左到右，从上到下地整理控件的Tab
              不处理子容器中的
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExControlTab.ToNextTab(System.Windows.Forms.Control,System.Boolean)">
            <summary>
               跳转到NextTab
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExControlTab.EachSonCotrols(System.Windows.Forms.Control.ControlCollection)">
            <summary>
            递归地
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExControlTab.EnterKeyDownToNextTab(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            回车跳转到下一控件(整个Form)
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExConvert.TryToGuid(System.Object,System.Guid)">
            <summary>
            .net 4.0才增加Guid.TryParse
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.ExConvertHex">
            <summary>
                把值类型以及字符串转换为16进制字符串以及反向转换
                本类的16进制串顺序与机器无关，总是如: 01FF(01 * 256 + FF)
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExConvertHex.ByteArrToHexStr(System.Byte[],System.Boolean)">
            <summary>
            特别要注意小尾问题
            </summary>
            <param name="isLittleEndian">使用BitConverter.IsLittleEndian</param>
        </member>
        <member name="T:SGLibrary.Extend.ExDateTime">
            <summary>
                日期时间扩展
            </summary>
        </member>
        <member name="F:SGLibrary.Extend.ExDateTime.FormatStr_Date">
            <summary>
            2012.01.09
            </summary>
        </member>
        <member name="F:SGLibrary.Extend.ExDateTime.FormatStr_Time">
            <summary>
            12:23:45，24小时制
            </summary>
        </member>
        <member name="F:SGLibrary.Extend.ExDateTime.FormatStr_DateTimeDot">
            <summary>
            2012.01.09 12:23:45，24小时制
            </summary>
        </member>
        <member name="F:SGLibrary.Extend.ExDateTime.FormatStr_DateTimeML">
            <summary>
            2012-01-09 12:23:45，24小时制
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExDateTime.DateTimeToUniformStr(System.DateTime,System.Int32,System.String)">
            <summary>
                获得长度固定的日期时间字符串,如"070228_031011", node: 年月日时分秒毫秒, 1起点
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExDateTime.SafeToOADateTime(System.DateTime)">
            <summary>
            如果转换失败,使用OleDbMinDateTime
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExDateTime.GetStartMomentOfDay(System.DateTime)">
            <summary>
            获取指定日期的开始时刻：yyyymmdd 0:0:0.000
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExDateTime.GetEndMomentOfDay(System.DateTime)">
            <summary>
            获取指定日期的结束时刻：yyyymmdd 23:59:59.999
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExDateTime.ConvertIntDateTime(System.Double)">
            <summary>
            将Unix时间戳转换为DateTime类型时间
            </summary>
            <param name="d">double 型数字</param>
            <returns>DateTime</returns>
        </member>
        <member name="F:SGLibrary.Extend.ExDateTime.DateAt.Invalid">
            <summary>
            无效值
            </summary>
        </member>
        <member name="F:SGLibrary.Extend.ExDateTime.DateAt.Century">
            <summary>
            世纪
            </summary>
        </member>
        <member name="F:SGLibrary.Extend.ExDateTime.DateAt.Year">
            <summary>
            年
            </summary>
        </member>
        <member name="F:SGLibrary.Extend.ExDateTime.DateAt.Month">
            <summary>
            月
            </summary>
        </member>
        <member name="F:SGLibrary.Extend.ExDateTime.DateAt.Day">
            <summary>
            日
            </summary>
        </member>
        <member name="F:SGLibrary.Extend.ExDateTime.DateAt.Hour">
            <summary>
            时
            </summary>
        </member>
        <member name="F:SGLibrary.Extend.ExDateTime.DateAt.Minute">
            <summary>
            分
            </summary>
        </member>
        <member name="F:SGLibrary.Extend.ExDateTime.DateAt.Second">
            <summary>
            秒
            </summary>
        </member>
        <member name="F:SGLibrary.Extend.ExDateTime.DateAt.Millisecond">
            <summary>
            毫秒
            </summary>
        </member>
        <member name="F:SGLibrary.Extend.ExDateTime.DateAt.WeekOfYear">
            <summary>
            一年的第多少周
            </summary>
        </member>
        <member name="F:SGLibrary.Extend.ExDateTime.DateAt.DayOfYear">
            <summary>
            一年的第多少天
            </summary>
        </member>
        <member name="F:SGLibrary.Extend.ExDateTime.DateAt.DayOfWeek">
            <summary>
            一周的第几天
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExDbg.ToStr(System.Object)">
            <summary>
            null 返回 is Null
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExDbg.MergeInnerException(System.Exception)">
            <summary>
            InnerException合并进Message, 不懂log4net如何记录InnerException异常代用之
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExDbg.GetCallerInfo(System.Int32)">
            <summary>
            获取调用此方法的方法名，deep: 0当前方法
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExDbg.GetCallStack">
            <summary>
            获取调用栈
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExDbg.GetCallStackStr">
            <summary>
            获取调用栈
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExDbg.GetExecuteInfo">
            <summary>
            获取当前执行的方法名
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExDbg.Assert(System.Boolean,System.String)">
            <summary>
               程序调试时希望断言失败后执行适当的操作,而不是只能退出程序
               此方法给程序以机会,代价是降低了速度
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExDbg.GetProcessesInfo">
            <summary> 
            获取进程信息, 调试状态执行会出错 
            </summary> 
        </member>
        <member name="P:SGLibrary.Extend.ExDbg.IsAttached">
             <summary>
                程序是否在调试器中跑
             </summary>
            
        </member>
        <member name="M:SGLibrary.Extend.ExDrawing.DrawBorder_3D_Protruding(System.Drawing.Rectangle,System.Drawing.Graphics)">
            <summary>
            突起的边框
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExDrawing.DrawBorder_3D_Concave(System.Drawing.Rectangle,System.Drawing.Graphics)">
            <summary>
            凹陷的边框
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.ExEnum">
            <summary>
            枚举类型处理
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExEnum.GetMax``1">
            <summary>
            获取所定义的枚举成员的最大值
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExEnum.GetMin``1">
            <summary>
            获取所定义的枚举成员的最小值
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExEnum.ParseByInt(System.Type,System.Int32)">
            <summary>
            强制将Int32转到枚举类型, 不管标识符, 只管实际的值, 未定义的会抛出异常
            会遍历enumType所有值, 比较低效
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExEnum.TryGetValue``1(System.String,``0)">
            <summary>
            将枚举成员的字面串转换回枚举值, strValue为null也返回defaultValue
            优先次序：定义的标识符、DescriptionAttribute定义的描述、有效的数值
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExEnum.GetDescription``1(``0)">
            <summary>
            读取枚举类型元素用DescriptionAttribute定义的描述信息，将建立并利用缓冲    
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExEnum.ListDescription``1(``0[])">
            <summary>
            列举枚举元素用DescriptionAttribute定义的描述信息
            适合于供下拉列表选择
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExEnum.GetDescriptionList``1(``0[])">
            <summary>
            获取枚举元素用DescriptionAttribute定义的描述信息列表
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExEnum.EnumItemDict`1.TryGetValue(System.String,`0)">
            <summary>
            优先次序：定义的标识符、DescriptionAttribute定义的描述、有效的数值
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExGZip.SerializerObject(System.Object)">
            <summary>  
            序列化Object并压缩，被序列化Object需要使用[Serializable]
            </summary>  
        </member>
        <member name="M:SGLibrary.Extend.ExGZip.DeserializeObject(System.Byte[])">
            <summary>  
            反序列化压缩的Object  
            </summary>  
        </member>
        <member name="M:SGLibrary.Extend.ExIO.IsValidFileName_Regex(System.String)">
            <summary>
            文件名合法
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExIO.MakeReadyFileDir(System.String)">
            <summary>
               准备目录，传递文件全名
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExIO.MakeReadyDir(System.String)">
            <summary>
               准备目录
               var fileInfo = new FileInfo(FileName);
               fileInfo.DirectoryName
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExIO.GetFormatDir(System.String)">
            <summary>
               确保目录后面有结尾符\或/，方便拼接
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExIO.GetNameFromFileName(System.String)">
            <summary>
               从全名（含路径）获得文件主名
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExIO.GetExtFromFileName(System.String)">
            <summary>
               从文件名中获得扩展名
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExIO.ChangeNameToFileName(System.String,System.String)">
            <summary>
               改变文件名中name部分
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.ExStopwatch">
            <summary>
               程序记时
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExStopwatch.Reset">
            <summary>
               停止时间间隔测量，并将运行时间重置为零。
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExStopwatch.Start">
            <summary>
               开始或继续测量某个时间间隔的运行时间。
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExStopwatch.Stop">
            <summary>
               停止测量某个时间间隔的运行时间。
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExStopwatch.Search">
            <summary>
               显示实际耗时，显示时将挂起。
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExStopwatch.Search(System.String)">
            <summary>
               显示实际耗时，显示时将挂起。
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.ExSequence">
            <summary>
            排序号相关
            </summary>
        </member>
        <member name="F:SGLibrary.Extend.ExSequence.cEnabledCharInfo">
            <summary>
            有效的字符编码信息
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExSequence.GetNextStringCode(System.String,System.String)">
            <summary>
            获取合适的下一个字符串Code
            AA --> AB; aZ --> bA; Zz --> AAa;  S = null或为空则return defaultValue
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExSequence.ToNextChar(System.Char@)">
            <summary>
            获取下一个编码，返回是否进位
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.ExSunna">
            <summary>
            习惯常量
            </summary>
        </member>
        <member name="F:SGLibrary.Extend.ExSunna.cKeyLen">
            <summary>
            由开发时定义的Key
            </summary>
        </member>
        <member name="F:SGLibrary.Extend.ExSunna.cDescriptionLen">
            <summary>
            正常的描述性属性
            </summary>
        </member>
        <member name="F:SGLibrary.Extend.ExSunna.cValueLen">
            <summary>
            正常的保存各种值的（通常会把各种类型转成字符串）
            </summary>
        </member>
        <member name="F:SGLibrary.Extend.ExSunna.cCommKeyLen">
            <summary>
            程序运行时通过Hascode、name等组合出的Key
            </summary>
        </member>
        <member name="F:SGLibrary.Extend.ExSunna.cCommValueLen">
            <summary>
            允许保存一组值的组合
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.ExTrimnessIntStr">
            <summary>
            整型数格式化到字符串
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExUI.GetInputString(System.String,System.String,System.Char)">
            <summary>
            不显示*则用(Char)0
            </summary>
            <param name="title">标题</param>
        </member>
        <member name="T:SGLibrary.Extend.ListFormOperation">
            <summary>
            列表窗体的操作类型
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.IAsynchronousRenewForm">
            <summary>
            能够异步更新的窗体
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.AsynchronousRenewForm">
            <summary>
            处理窗体异步更新
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExWinFm.FindShowMdiChild(System.Windows.Forms.Form,System.Type)">
            <summary>
            找已经显示的 mdiChildType 类型的MdiChildFm，没找到返回null
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExWinFm.FindShowMdiChild``1(System.Windows.Forms.Form)">
            <summary>
            找已经显示的 T 类型的MdiChildFm，没找到返回null
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExWinFm.FindMdiParent(System.Windows.Forms.Form)">
            <summary>
            找MdiContainer，包括sender
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExWinFm.GetSinglerMdiChildFm``1(System.Windows.Forms.Form)">
            <summary>
            获取 T 类型的MdiChildFm，如已存在激活,否则新建
            FormBorderStyle == Fixed则ShowDialog
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExWinFm.GetSinglerMdiChildFm(System.Windows.Forms.Form,System.Type,System.Boolean)">
            <summary>
            获取 mdiChildType 类型的MdiChildFm，如已存在激活,否则新建(mdiChildType必须有无参构造函数)
            FormBorderStyle == Fixed则ShowDialog
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExWinFm.StartProcess(System.String)">
            <summary>
            启动某进程，可以用于程序重启
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExWinFm.ResetCloseReason(System.Windows.Forms.Form)">
            <summary>
            Form.FormClosing事件所传递的e.CloseReason有Bug，需要在事件中重置(不影响e)
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExMath.GetDecimalBit(System.Int64,System.Int32)">
            <summary>
            获取10进制某位的数据,右向左,0起点
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExMath.SetDecimalBit(System.Int64,System.Int32,System.Int32)">
            <summary>
            设置10进制某位的数据,右向左,0起点
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExMath.CutNumberString(System.String)">
            <summary>
            截取有效的数字字符串
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExRandom.NextInt32Array(System.Int32)">
            <summary>
            获得一个由0--count -1的数以随机顺序构成的数组
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExRandom.Next(System.Int32)">
            <summary>
            获取一个大于等于0，小于maxValue的值
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExRandom.Next(System.Int32,System.Int32)">
            <summary>
            获取一个大于等于minValue，小于maxValue的值
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExRandom.GetRandomItems``1(System.Collections.Generic.IList{``0},System.Int32)">
            <summary>
            获取一组随机的不重复的成员, 注意返回的顺序还是source的顺序
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.INormalGenerator.Next(System.Int32,System.Int32)">
            <summary>
            获取一个符合正态分布的随机值，minValue&lt;=返回值&lt;maxValue
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.NormalGenerator_2">
            <summary>
            正态分布
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.NormalGenerator_2.Next(System.Int32,System.Int32)">
            <summary>
            获取一个符合正态分布的随机值，minValue&lt;=返回值&lt;maxValue
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.NormalGenerator_3">
            <summary>
            gaussian random number generator
            高斯分布随机数发生器（正态分布）
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.NormalGenerator_3.nextBak">
            <summary>
            这个算法有问题的
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.NormalGenerator_3.NextDouble">
            <summary>
            这个算法有问题的
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.NormalGenerator_3.Next(System.Int32,System.Int32)">
            <summary>
            获取一个符合正态分布的随机值，minValue&lt;=返回值&lt;maxValue
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.Permutations">
            <summary>
            排列
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExIIS.EachWebServerAndWebVirtualDir(System.String)">
            <summary>
            获取所有网站及虚拟目录
            root通常："IIS://localhost/w3svc/1/Root"
            1是默认网站的标识
            返回的Key是虚拟目录，Info是本地目录
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExIIS.GetWebServer(System.String,System.String)">
            <summary>
            获取指定的物理目录所属的网站/虚拟目录
            root通常："IIS://localhost/w3svc"
            返回的Key是虚拟目录，Info是本地目录
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExIIS.GetWebSiteLocalDirectory(System.String)">
            <summary>
            获取一个虚拟目录的本地路径
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExIIS.SetWebSiteLocalDirectory(System.String,System.String)">
            <summary>
            变更一个虚拟目录的本地路径
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExIIS.GetServerState(System.String)">
            <summary>
            获取虚拟目录的运行状态
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExIIS.SetServerState(System.String,SGLibrary.Extend.WebServerState)">
            <summary>
            设置虚拟目录的运行状态
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExIIS.VirtualDirExist(System.String)">
            <summary>
            虚拟目录存在
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExIIS.GetWebSiteVirtualDirName(System.String)">
            <summary>
            通过站点名获取完整的虚拟目录名, todo
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExIIS.CreateWebVirtualDir(System.String)">
            <summary>
            创建一个虚拟目录, todo
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExIIS.DeleteWebVirtualDir(System.String)">
            <summary>
            删除一个虚拟目录, todo
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExNet.HpptPOST(System.String,System.Int32,System.String,System.String,System.Text.Encoding,System.Net.WebProxy,System.String@)">
            <summary>
                特别要注意，在winform程序中会自动使用IE的proxy，在IIS中则不能取得IE的proxy，
            必须手工构造一个proxy，且不能使用WebProxy.GetDefaultProxy()或HttpWebRequest.DefaultWebProxy，
            因为这两个方法在IIS中同样取不到IE的proxy
                化了俺一天半时间，呆
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExNet.GetUserHostAddress">
            <summary>
            在Web页面得到用户的IP
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExUrl.FormatPath(System.String)">
            <summary>
            清除空格并保证以"/"结尾
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExUrl.UpdateWebServiceUrl(System.String,System.String)">
            <summary>
            将如http://10.10.3.12/webservice 与 http://localhost/webservice/debug.asmx
            合成为http://10.10.3.12/webservice/debug.asmx
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExUrl.GetServicePath(System.String)">
            <summary>
            获得Url中路径部分如 http://localhost/webservice/debug.asmx
            得到http://localhost/webservice/
            </summary>
        </member>
        <member name="M:TestHttpPost.FrmTestHttpPost.Encoding_FromBodyName(System.String)">
            <summary>
            根据BodyName创建Encoding对象。
            </summary>
            <param name="bodyname">与邮件代理正文标记一起使用的当前编码的名称。</param>
            <returns>返回Encoding对象。若没有匹配的BodyName，便返回null。</returns>
        </member>
        <member name="M:TestHttpPost.FrmTestHttpPost.OutLog(System.String)">
            <summary>
            输出日志文本.
            </summary>
            <param name="s">日志文本</param>
        </member>
        <member name="F:TestHttpPost.FrmTestHttpPost.components">
            <summary>
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:TestHttpPost.FrmTestHttpPost.Dispose(System.Boolean)">
            <summary>
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:TestHttpPost.FrmTestHttpPost.InitializeComponent">
            <summary>
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.WebServiceUrlConfig_Ini">
            <summary>
            没啥用的类
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExSafe.BuileMD5PasswordBak(System.String,System.String,System.String)">
            <summary>
            获取一个掺过盐的MD5(32个16进制字符)，以阻止彩虹表
            这个方法不要用了
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExSafe.BuileMD5Password(System.String,System.String,System.String)">
            <summary>
            获取一个掺过盐的MD5(32个16进制字符)，以阻止彩虹表
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExSafe.GetMD5_32(System.String,System.Boolean)">
            <summary>
            获取MD5签名(32个16进制字符)
            这个方法不要用了
            </summary>
            <param name="isLittleEndian">标准的MD5应该传false</param>
        </member>
        <member name="M:SGLibrary.Extend.ExSafe.DESEncrypt(System.String,System.String,System.Security.Cryptography.CipherMode,System.Byte[])">
            <summary>
            CipherMode: ECB/CBC，Java默认为ECB
            key长度前8有效，IV可空
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExSafe.DESDecryptor(System.String,System.String,System.Security.Cryptography.CipherMode,System.Byte[])">
            <summary>
            CipherMode: ECB/CBC，Java默认为ECB
            key长度前8有效，IV可空
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExSafe.DomainUserIsAuthenticated(System.String,System.String,System.String,System.String)">
            <summary>
            域身份验证，执行此方法的机器不需要在域中
            </summary>
            <param name="domainAddress">如：LDAP://192.168.150.168</param>
            <param name="username">不需要域名前缀</param>
        </member>
        <member name="M:SGLibrary.Extend.ExSafe.DomainUserIsAuthenticated_MSDN(System.String,System.String,System.String,System.String)">
            <summary>
            域身份验证，执行此方法的机器不需要在域中
            方法抄袭于MSDN
            </summary>
            <param name="domainAddress">如：LDAP://192.168.150.168</param>
            <param name="username">不需要域名前缀</param>
        </member>
        <member name="T:SGLibrary.Extend.BaseDoubleKeyDictionary`3">
            <summary>
            双Key的字典
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.KeyText`1">
            <summary>
            推荐使用KeyValuePair, 或使用Tuple类型
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.KeyText`1.ToString">
            <summary>
            很多地方显示用，不要修改
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.KeyValue`2">
            <summary>
            使用KeyValuePair更快速, 或使用Tuple类型
            对TKey为String的，使用ValueText&lt;T&gt;更合适
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.PeriodOfTime">
            <summary>
            时间区间
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.TypeExtend">
            <summary>
            动态创建类型
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.TypeExtend.Build``1(System.String,System.Collections.Generic.IList{SGLibrary.Extend.KeyValue{System.String,System.Type}},System.Type[])">
            <summary>
            动态创建一个派生于T且扩展了指定属性的类型
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.TypeExtend.BuildBak``1">
            <summary>
            演示的方法,不要用
            动态创建一个派生于T且扩展了一个Checked(Boolean)属性的类型
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.YearMonth.#ctor(System.String)">
            <summary>
            使用'.'分隔年月，如'2011.4'
            </summary>
        </member>
        <member name="M:SGLibrary.Extend.ExWebIO.DownloadFile(System.Web.UI.Page,System.String,System.String)">
            <summary>
            汉字会有问题的
            </summary>
        </member>
        <member name="T:SGLibrary.Extend.PageWhereRem">
            <summary>
            这个类用来记忆页面的查询条件--开发中
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.CommCfgAndWhereConst">
            <summary>
            通用配置与查询条件常量
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.CommCfgAndWhereConst.ArrangeSection(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.CommCfgAndWhereConst.ArrangeKey(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Config.IConfig">
            <summary>
            用来处理系统中可有可无的配置项，如窗体记忆、用户自定义的一些风格等
            通用的配置，section不会被编码，注意提供合法标识
            Load方法，如果没有配置项会创建，注意remark不会被编码
            remark不会被单独更新
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Config.IConfig.ListConfigItems">
            <summary>
            返回null: 不支持预装载
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Config.IConfig.LoadString(System.String,System.String,System.String,System.String)">
            <summary>
            不存在对应key则新增
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Config.IConfig.LoadInt64(System.String,System.String,System.Int64,System.String)">
            <summary>
            不存在对应key则新增
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Config.IConfig.LoadInt32(System.String,System.String,System.Int32,System.String)">
            <summary>
            不存在对应key则新增
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Config.IConfig.LoadBoolean(System.String,System.String,System.Boolean,System.String)">
            <summary>
            不存在对应key则新增
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Config.IConfig.LoadDateTime(System.String,System.String,System.DateTime,System.String)">
            <summary>
            不存在对应key则新增
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Config.IConfig.LoadGuid(System.String,System.String,System.Guid,System.String)">
            <summary>
            不存在对应key则新增
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Config.ConfigImpl_AppConfig">
            <summary>
            处理外部的App.config/Web.config，特别注意不是本程序的
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Config.ConfigImpl_Configuration">
            <summary>
            在App.config/Web.config中处理配置
            特别注意IIS在默认设置下网络服务是无权限写Web.config的，所以Load方法等同于Read方法
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Config.ConfigImpl_Registry">
            <summary>
            写到注册表中，注意不支持多用户！
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Config.ConfigImpl_Registry.AutoRunKey">
            <summary>
            自动运行: 
            new ConfigImpl_Registry(Registry.LocalMachine).WriteString(ConfigImpl_Registry.AutoRunKey, "TestAutoRun", Application.ExecutablePath);
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Config.HibernateConnConfig">
            <summary>
            读写hibernate.cfg.xml中的数据库连接串
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Config.IListConfig">
            <summary>
            配置成组数据用,也可作为IConfig用
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.FieldInfo.IsDefaultEqsDBNull">
            <summary>
            属性值为Default当做DBNull
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.IWhereRem.ListWhereRemItems">
            <summary>
            返回null: 不支持预装载
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.BooleanCompare.Invalid">
            <summary>
            无效值
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.BooleanCompare.IsTrue">
            <summary>
            真
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.BooleanCompare.IsFalse">
            <summary>
            假
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.StringCompare.Invalid">
            <summary>
            无效值
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.StringCompare.Equal">
            <summary>
            等于
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.StringCompare.Contains">
            <summary>
            包含
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.StringCompare.UnEqual">
            <summary>
            不等于
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.StringCompare.StartsWith">
            <summary>
            起始为
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.StringCompare.EndsWith">
            <summary>
            结尾为
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.StringCompare.IsNull">
            <summary>
            为null或空串
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.StringCompare.IsNotNull">
            <summary>
            不为null及空串
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.ValueCompare.Invalid">
            <summary>
            无效值
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.ValueCompare.Equal">
            <summary>
            等于
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.ValueCompare.UnEqual">
            <summary>
            不等于
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.ValueCompare.StartsWith">
            <summary>
            大于
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.ValueCompare.Contains">
            <summary>
            介于两者间
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.ValueCompare.EndsWith">
            <summary>
            小于
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.DateCompare.Invalid">
            <summary>
            无效值
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.DateCompare.CompareByNow">
            <summary>
            相对时间
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.DateCompare.Equal">
            <summary>
            等于
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.DateCompare.UnEqual">
            <summary>
            不等于
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.DateCompare.StartsWith">
            <summary>
            大于
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.DateCompare.Contains">
            <summary>
            介于两者间
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.DateCompare.EndsWith">
            <summary>
            小于
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.GuidCompare.Invalid">
            <summary>
            无效值
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.TreeCodeCompare.Invalid">
            <summary>
            无效值
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.TreeCodeCompare.Equal">
            <summary>
            等于
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.TreeCodeCompare.Include">
            <summary>
            包含于
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.TreeCodeCompare.UnInclude">
            <summary>
            不包含于
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.AtCompare.Invalid">
            <summary>
            无效值
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.DateCompareByNow">
            <summary>
            日期相对条件
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.DateCompareByNow.Today">
            <summary>
            今天
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.DateCompareByNow.Yesterday">
            <summary>
            昨天
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.DateCompareByNow.ThisWeek">
            <summary>
            本周
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.DateCompareByNow.LastWeek">
            <summary>
            上周
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.DateCompareByNow.ThisMonth">
            <summary>
            本月
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.DateCompareByNow.LastMonth">
            <summary>
            上月
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.DateCompareByNow.ThisYear">
            <summary>
            本年
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.DateCompareByNow.LastYear">
            <summary>
            上年
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.DateCompareByNow.ForAWeek">
            <summary>
            一周以来
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.DateCompareByNow.ForAMonth">
            <summary>
            一月以来
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.DateCompareByNow.ForAYear">
            <summary>
            一年以来
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereEventArgs.ResultCount">
            <summary>
            执行查询后将返回的记录数填入此属性
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereContentAlignment">
            <summary>
            对齐方式
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereList">
            <summary>
            这是一个可递归的类, null不会被Add
            似乎已经实现了Xml序列化，可以穿越WebService
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereList.#ctor(SGLibrary.Framework.Criterion.WhereNodeComposeKind,System.Int32)">
            <summary>
            指定组合
            </summary>
            <param name="composeKind">and/or</param>
            <param name="maxResults">&lt;=0不限制</param>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereList.Exist(System.String)">
            <summary>
            是否存在指定的Bind元素，不会被递归
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereList.TryRemove(System.String)">
            <summary>
            不会被递归
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereList.EachItems">
            <summary>
            迭代子成员
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereList.ComposeKind">
            <summary>
            子元素组合类型（and/or）
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereList.Item(System.String)">
            <summary>
            仅返回第一个，不会被递归
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereListApply">
            <summary>
            用来处理跨Web Service、从控件获取查询条件、查询条件记忆
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereNodeBoolean">
            <summary>
            Boolean查询条件
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereNodeBoolean.#ctor(System.String,System.Boolean)">
            <summary>
            等于
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeBoolean.Compare">
            <summary>
            比较符
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereNodeGuid">
            <summary>
            Guid Code查询条件
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereNodeGuid.#ctor(System.String,System.Guid)">
            <summary>
            等于
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeGuid.Compare">
            <summary>
            比较符
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereNodeTreeCode">
            <summary>
            字符串树结构Code的查询条件
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereNodeTreeCode.#ctor(System.String,System.String)">
            <summary>
            包含于
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeTreeCode.Compare">
            <summary>
            比较符
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereNodeDate">
            <summary>
            日期查询条件，支持相对日期
            数据库中此Field是否包含时间不影响
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereNodeDate.#ctor(System.String,System.DateTime,System.DateTime)">
            <summary>
            包含端点的区间
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereNodeDate.#ctor(System.String,System.DateTime)">
            <summary>
            等于
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereNodeDate.BuildDateWhere(SGLibrary.Framework.Criterion.WhereNodeDate,SGLibrary.DB.IDbDialect,SGLibrary.Framework.Criterion.DlgBindToFieldInfo,System.Collections.Generic.IList{SGLibrary.Extend.KeyValue{System.String,System.Object}})">
            <summary>
            把相对时间转为绝对时间
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereNodeDate.BuildDateWhere_Absolute(SGLibrary.Framework.Criterion.WhereNodeDate,SGLibrary.DB.IDbDialect,SGLibrary.Framework.Criterion.DlgBindToFieldInfo,System.Collections.Generic.IList{SGLibrary.Extend.KeyValue{System.String,System.Object}})">
            <summary>
            绝对时间
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeDate.Compare">
            <summary>
            比较符
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeDate.CompareByNow">
            <summary>
            相对时间比较
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeDate.CompareValue">
            <summary>
            Equal、UnEqual使用此属性
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeDate.CompareValueLow">
            <summary>
            StartsWith、Contains使用
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeDate.CompareValueTop">
            <summary>
            EndsWith、Contains使用
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeDate.IncludeLow">
            <summary>
            包含低端
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeDate.IncludeTop">
            <summary>
            包含高端
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereNodeDateTime">
            <summary>
            时间点查询条件
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereNodeDateTime.#ctor(System.String,System.DateTime)">
            <summary>
            等于
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereNodeDateTime.#ctor(System.String,System.DateTime,System.DateTime)">
            <summary>
            包含端点的区间
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeDateTime.Compare">
            <summary>
            比较符
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeDateTime.CompareValue">
            <summary>
            Equal、UnEqual使用此属性
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeDateTime.CompareValueLow">
            <summary>
            StartsWith、Contains使用
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeDateTime.CompareValueTop">
            <summary>
            EndsWith、Contains使用
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereNodeDecimal">
            <summary>
            浮点数的查询条件
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereNodeDecimal.#ctor(System.String,System.Decimal)">
            <summary>
            等于
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereNodeDecimal.#ctor(System.String,System.Decimal,System.Decimal)">
            <summary>
            包含端点的区间
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeDecimal.Compare">
            <summary>
            比较符
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeDecimal.CompareValue">
            <summary>
            Equal、UnEqual使用此属性
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeDecimal.CompareValueLow">
            <summary>
            StartsWith、Contains使用
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeDecimal.CompareValueTop">
            <summary>
            EndsWith、Contains使用
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereNodeExpression">
            <summary>
            where中直接使用的表达式（手工写Sql的Where用）
            todo 需要支持定义如将"[属性A] > [属性B]" 转换成查询条件的功能
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereNodeFalse">
            <summary>
            全否条件，会生成一个1=2节
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereNodeInt">
            <summary>
            整数的查询条件
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereNodeInt.#ctor(System.String,System.Int64)">
            <summary>
            等于
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereNodeInt.#ctor(System.String,System.Enum)">
            <summary>
            等于
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereNodeInt.#ctor(System.String,System.Int64,System.Int64)">
            <summary>
            包含端点的区间
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeInt.Compare">
            <summary>
            比较符
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeInt.CompareValue">
            <summary>
            Equal、UnEqual使用此属性
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeInt.CompareValueLow">
            <summary>
            StartsWith、Contains使用
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeInt.CompareValueTop">
            <summary>
            EndsWith、Contains使用
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereNodeIntIn">
            <summary>
            整数In查询条件
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereNodeIntIn.#ctor(System.String,System.Int64[])">
            <summary>
            At values
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereNodeIntIn.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            At values
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeIntIn.Compare">
            <summary>
            比较符
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereNodeIntMultiattribute">
            <summary>
            多字段查询条件
            处理如age1 = @a or age2 = @a, Bind为用','分隔的字符串
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereNodeIntMultiattribute.#ctor(System.String,System.Int64)">
            <summary>
            多字段查询条件，默认等于
            处理如age1 = @a or age2 = @a, Bind为用','分隔的字符串
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereNodeIntMultiattribute.#ctor(System.String,System.Int64,System.Int64)">
            <summary>
            包含端点的区间
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeIntMultiattribute.Compare">
            <summary>
            比较符
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeIntMultiattribute.CompareValue">
            <summary>
            Equal、UnEqual使用此属性
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeIntMultiattribute.CompareValueLow">
            <summary>
            StartsWith、Contains使用
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeIntMultiattribute.CompareValueTop">
            <summary>
            EndsWith、Contains使用
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereNodeNull">
            <summary>
            判断字段是否为null
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeNull.Compare">
            <summary>
            比较符
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereNodeString">
            <summary>
            字符串的查询条件
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereNodeString.#ctor(System.String,System.String)">
            <summary>
            等于
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeString.Compare">
            <summary>
            比较符
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereNodeStringIn">
            <summary>
            字符串In查询条件
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereNodeStringIn.#ctor(System.String,System.String[])">
            <summary>
            At values
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereNodeStringIn.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            At values
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeStringIn.Compare">
            <summary>
            比较符
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeStringIn.CompareValueString">
            <summary>
            逗号分隔的
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereNodeStringLen">
            <summary>
            字符串长度的查询条件
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereNodeStringLen.#ctor(System.String,System.Int32)">
            <summary>
            字符串长度的查询条件，默认等于
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeStringLen.Compare">
            <summary>
            比较符
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeStringLen.CompareValue">
            <summary>
            长度
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeStringLen.CompareValueLow">
            <summary>
            StartsWith、Contains使用
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeStringLen.CompareValueTop">
            <summary>
            EndsWith、Contains使用
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereNodeStringMultiattribute">
            <summary>
            多字段查询条件，注意效率
            处理如name like @a or shortName like @a, Bind为用','分隔的字符串
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereNodeStringMultiattribute.#ctor(System.String,System.String)">
            <summary>
            多字段查询条件，默认等于
            处理如name like @a or shortName like @a, Bind为用','分隔的字符串
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeStringMultiattribute.Compare">
            <summary>
            比较符
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereNodeYearMonth">
            <summary>
            年月的查询条件，使用'.'分隔年月
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereNodeYearMonth.#ctor(System.String,System.DateTime)">
            <summary>
            等于time的年月
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereNodeYearMonth.#ctor(System.String,SGLibrary.Extend.YearMonth)">
            <summary>
            等于time的年月
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereNodeYearMonth.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            等于
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereNodeYearMonth.#ctor(System.String,System.DateTime,System.DateTime)">
            <summary>
            包含端点
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereNodeYearMonth.#ctor(System.String,SGLibrary.Extend.YearMonth,SGLibrary.Extend.YearMonth)">
            <summary>
            包含端点
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereNodeYearMonth.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            包含端点
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereNodeYearMonth.Compare">
            <summary>
            比较符
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereCtlFilter">
            <summary>
            属性过滤用查询条件：输入文本后回车即执行查询，不用于WhereControlPanel
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereCtlFilter.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.WhereCtlFilter.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereCtlFilter.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereCtlFilter.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereCtlFilter.Text">
            <summary>
            显示的文本
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereCtlFilter.TextSectionLength">
            <summary>
            文本预留的空间
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereCtlFilter.TextAlign">
            <summary>
            文本对齐方式
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereCtlFilter.MaxEditWidth">
            <summary>
            输入框最大宽度
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereCtlFilter.BindProperty">
            <summary>
            绑定的属性, 为用','分隔的字符串
            </summary>
        </member>
        <member name="E:SGLibrary.Framework.Criterion.WhereCtlFilter.Query">
            <summary>
            查询事件
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereCtlFilter.QuerySleep">
            <summary>
            查询时让程序反应钝一点，使用户形成查询需要代价的潜意识。单位毫秒
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereCtlFilter.MaxResults">
            <summary>
            最大返回数据行
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereCtlFilter.MaxRemItems">
            <summary>
            最大记忆行
            </summary>
        </member>
        <member name="E:SGLibrary.Framework.Criterion.WhereCtlFilter.QueryExceptionHandler">
            <summary>
            执行查询发生错误
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereEdit">
            <summary>
            支持条件记忆的查询条件控件容器，容器中的查询条件必须指定不同且非空的BindProperty
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereEdit.DoQuery">
            <summary>
            执行查询
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.WhereEdit.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereEdit.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereEdit.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereEdit.QuerySleep">
            <summary>
            查询时让程序反应钝一点，使用户形成查询需要代价的潜意识。单位毫秒
            </summary>
        </member>
        <member name="E:SGLibrary.Framework.Criterion.WhereEdit.Query">
            <summary>
            查询事件
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereEdit.DefaultResults">
            <summary>
            默认返回数据行
            </summary>
        </member>
        <member name="E:SGLibrary.Framework.Criterion.WhereEdit.QueryExceptionHandler">
            <summary>
            执行查询发生错误
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.Criterion.WhereEdit.WhereRem">
            <summary>
            记忆查询条件
            </summary>
        </member>
        <member name="E:SGLibrary.Framework.Criterion.WhereEdit.BeforeSaveRemWhere">
            <summary>
            保存查询条件前，可以用来处理自定义查询控件的记忆
            </summary>
        </member>
        <member name="E:SGLibrary.Framework.Criterion.WhereEdit.AfterLoadRemWhere">
            <summary>
            装入查询条件后，可以用来处理自定义查询控件的记忆
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereCtlBoolean">
            <summary>
            Boolean查询条件
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.WhereCtlBoolean.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereCtlBoolean.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereCtlBoolean.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereCtlGuidComboBox">
            <summary>
            Guid代码查询条件，Guid代码不可为Guid.Empty
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.WhereCtlGuidComboBox.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereCtlGuidComboBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereCtlGuidComboBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereCtlTreeCode">
            <summary>
            树结构编码查询条件
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.WhereCtlTreeCode.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereCtlTreeCode.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereCtlTreeCode.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereCtlDate">
            <summary>
            日起查询条件
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.WhereCtlDate.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereCtlDate.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereCtlDate.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereCtlDecimal">
            <summary>
            数值查询条件
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.WhereCtlDecimal.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereCtlDecimal.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereCtlDecimal.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereCtlInt">
            <summary>
            数值查询条件
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.WhereCtlInt.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereCtlInt.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereCtlInt.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereCtlIntComboBox">
            <summary>
            下的数值拉查询条件
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.WhereCtlIntComboBox.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereCtlIntComboBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereCtlIntComboBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereCtlIntTextBox">
            <summary>
            数值查询条件
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.WhereCtlIntTextBox.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereCtlIntTextBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereCtlIntTextBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereCtlString">
            <summary>
            字符串查询条件
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.WhereCtlString.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereCtlString.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereCtlString.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereCtlStringComboBox">
            <summary>
            下拉的字符串查询条件
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.WhereCtlStringComboBox.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereCtlStringComboBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereCtlStringComboBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Criterion.WhereCtlStringMultiattribute">
            <summary>
            多字段包含查询条件，默认为包含，注意效率；Bind为用','分隔的字符串
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Criterion.WhereCtlStringMultiattribute.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereCtlStringMultiattribute.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SGLibrary.Framework.Criterion.WhereCtlStringMultiattribute.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.GridBind.AttributeProviderOrmProperty2GridBindColumn">
            <summary>
            ORM2GridBind的桥接
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.GridBind.GridBindBizSceneAttribute">
            <summary>
            业务场景
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.GridBind.GridBindBizSceneAttribute.BizSceneId">
            <summary>
            0为缺省, 不要用
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.GridBind.GridBindColumnAttribute.PropertyName">
            <summary>
            绑定所在属性名
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.GridBind.GridBindColumnComboboxAttribute.Items">
            <summary>
            最优先
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.GridBind.GridBindColumnMngImplV1`1">
            <summary>
            正式的实现
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.GridBind.IGridBindColumnMng.GetColumnAndPropertyMaps(System.Int32)">
            <summary>
            获得指定业务场景下属性与列的映射关系
            insertDef: CheckBind必须有映射才行
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.GridBind.GridBindColumnMngImplV1`1.GetColumnAndPropertyMaps(System.Int32)">
            <summary>
            获得指定业务场景下属性与列的映射关系
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.GridBind.GridBindColumnMngImpl_Appoint">
            <summary>
            用于程序指定列而不是通过反射获得属性的Attribute
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.GridBind.GridBindGridCfg.Frozen">
            <summary>
            冻结的列数
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.GridBind.ORM2GridBindBridge">
            <summary>
            ORM2GridBind的桥接
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.GridBind.WinForm.ColumnCustomFm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.GridBind.WinForm.ColumnCustomFm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SGLibrary.Framework.GridBind.WinForm.ColumnCustomFm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.GridBind.WinForm.GridCheckBind`1">
            <summary>
            一个用来选择对象的列表管理器
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.GridBind.WinForm.GridCheckBind`1.BuildCheckType">
            <summary>
            动态创建一个派生于T且扩展了一个Checked(Boolean)属性的类型
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.GridBind.WinForm.GridCheckBind`1.Current">
            <summary>
            获取列表中的当前项
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Log.LogLevel">
            <summary>
            All > Info > Warn > Error > Fatal > Off
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Log.ISimpleLog.IsCanRecord">
            <summary>
            能够正确记录
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Log.IUser4Log">
            <summary>
            业务日志之用户
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Log.Log4netConfig.SetLogDirectory(System.String,System.String)">
            <summary>
            通过替换字符串实现，格式不规范将不能正确工作
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Log.Log4netConfig.GetLogDirectory(System.String)">
            <summary>
            通过查找字符串实现，格式不规范将不能正确工作
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.Log.SimpleLogImpl_ShowFm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.Log.SimpleLogImpl_ShowFm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SGLibrary.Framework.Log.SimpleLogImpl_ShowFm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Log.SimpleLogImpl_SysEvent">
            <summary>
            写到系统事件中去，注意默认状态Web应用是没有写系统事件的权限的，
            需要改变应用程序池的设置
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.Log.SimpleLogImpl_Text">
            <summary>
            这个日志类不适用于Web,因为定时器的原因
            Web请用ThreadSafeLogText
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.ORM.IMappingEventInterceptor">
            <summary>
            用于处理复杂属性的映射
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ORM.IOrmPlanar`1.Add(`0)">
            <summary>
            自动生成的Id会回写入value
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ORM.IOrmPlanar`1.Add_List(System.Collections.Generic.IList{`0})">
            <summary>
            自动生成的Id会回写入values
            可能部分成功，会跳过null
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ORM.IOrmPlanar`1.Add_List_BulkCopy(System.Collections.Generic.IList{`0})">
            <summary>
            批量写入, 目前只有SqlServer支持, 注意无法回写自增Id, 对Guid/String类PK能够自动生成
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ORM.IOrmPlanar`1.Delete_List(System.Collections.Generic.IList{`0})">
            <summary>
            会跳过null
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ORM.IOrmPlanar`1.Delete_Where(SGLibrary.Framework.Criterion.WhereList)">
            <summary>
            指定null不删除任何
            当前实现当有外连接时多表联合删除有潜在问题的！！！
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ORM.IOrmPlanar`1.Update_List(System.Collections.Generic.IList{`0},System.String[])">
            <summary>
            可能部分成功，会跳过null
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ORM.IOrmPlanar`1.GetEntity_Where(SGLibrary.Framework.Criterion.WhereList,System.Collections.Generic.IList{SGLibrary.Framework.Criterion.OrderNode})">
            <summary>
            无符合条件的返回null，否则返回第一个
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ORM.IOrmPlanar`1.Query_Property(SGLibrary.Framework.Criterion.WhereList,System.Collections.Generic.IList{SGLibrary.Framework.Criterion.OrderNode},System.String[])">
            <summary>
            只返回对应的属性
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ORM.IOrmPlanar`1.Query_Paging(SGLibrary.Framework.Criterion.WhereList,System.Collections.Generic.IList{SGLibrary.Framework.Criterion.OrderNode},System.Int32,System.Int32)">
            <summary>
            分页查询，注意pageIndex 0起点
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ORM.IOrmPlanar`1.TryCreateTable(System.Text.StringBuilder)">
            <summary>
            sqlExport不为null则只生成SQL语句,并不实际执行
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.ORM.IOrmPlanar`1.Field">
            <summary>
            属性转换为字段名
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.ORM.ORConvertImpl`1">
            <summary>
            这个类完成Table到Object间的转换，目的是处理旧的基于DataSet的应用
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ORM.ORConvertImpl`1.#ctor(System.String)">
            <summary>
            指定了参数fieldDefaultPrefix则覆盖OrmEntityAttribute定义的OrmEntityAttribute
            如实体类未使用OrmEntityAttribute，或OrmProperty未指定字段明，则字段名=fieldDefaultPrefix + 属性名
            会自动处理属性的大小写
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ORM.ORConvertImpl`1.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            字段名 -> 属性名
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.ORM.ORConvertImpl`1.FieldDefaultPrefix">
            <summary>
            默认字段前缀，总是大写
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.ORM.OrmConfig.IsReturnNativeError">
            <summary>
            是否返回原生错误，默认否。
            因为原生错误会透露底层信息，带来安全隐患
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.ORM.OrmConfig.TableName">
            <summary>
            若指定了表名则覆盖OrmEntityAttribute中的指定
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.ORM.OrmConfig.OrmInfoMng">
            <summary>
            指定的映射管理器
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ORM.ORMDbHelperImpl.NewOrmPlanar``1">
            <summary>
            通过改写获得制定类型的IOrmPlanar, 通常是获得派生于OrmPlanar&lt;T&gt;的对象
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ORM.ORMDbHelperImpl.Get_Where``1(SGLibrary.Framework.Criterion.WhereList,System.Collections.Generic.IList{SGLibrary.Framework.Criterion.OrderNode})">
            <summary>
            无符合条件的返回null，否则返回第一个
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.ORM.ORMDbHelperImpl.AppLogger">
            <summary>
            写错误日志等
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.ORM.OrmDirectnessMap`1">
            <summary>
            只用来读, 实体类不需要加任何标签，使用：
            var orm = new OrmPlanar&lt;EnBizLog&gt;(ThisModule, new OrmDirectnessMap&lt;EnBizLog&gt;());
            return orm.Query(where);
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.ORM.OrmEntityAttribute.Description">
            <summary>
            自动生成表时会作为表的描述
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.ORM.OrmInfoAndPropertyMap.InterdictNull">
            <summary>
            禁止Null
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.ORM.OrmAttributeMng_ValueEntity`1">
            <summary>
            完成只能用来读的表到实体的映射, 不需要写任何配置, 不需要标注OrmEntityAttribute
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ORM.OrmPlanar`1.AddPara(System.Collections.Generic.IList{SGLibrary.Extend.KeyValue{System.String,System.Object}},System.Object,SGLibrary.Framework.ORM.OrmInfoAndPropertyMap)">
            <summary>
            当字符串超过长度，则返回Exception
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ORM.OrmPlanar`1.Add(`0)">
            <summary>
            自动生成的Id会回写入value
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ORM.OrmPlanar`1.Add_List(System.Collections.Generic.IList{`0})">
            <summary>
            自动生成的Id会回写入values
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ORM.OrmPlanar`1.Add_List_BulkCopy(System.Collections.Generic.IList{`0})">
            <summary>
            批量写入, 目前只有SqlServer支持, 注意无法回写自增Id, 对Guid/String类PK能够自动生成
            性能: 1万条数百ms
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ORM.OrmPlanar`1.ConvertToDataTable(System.Collections.Generic.IList{`0})">
            <summary>
            要求连接数据库
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ORM.OrmPlanar`1.BuildWhereStr(SGLibrary.Framework.Criterion.WhereList,System.Collections.Generic.IList{SGLibrary.Extend.KeyValue{System.String,System.Object}})">
            <summary>
            要处理数据库类型
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ORM.OrmPlanar`1.TryCreateTable(System.Text.StringBuilder)">
            <summary>
            会与数据库类型相关
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ORM.OrmPlanar`1.Delete_Where(SGLibrary.Framework.Criterion.WhereList)">
            <summary>
            指定null不删除任何
            当前实现当有外连接时多表联合删除有潜在问题的！！！
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ORM.OrmPlanar`1.GetQuerySql">
            <summary>
             无select
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ORM.OrmPlanar`1.GetQuerySql(System.Collections.Generic.IList{System.String})">
            <summary>
             无select, 只包含properties的属性(为空则全部)
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ORM.OrmPlanar`1.BuildFrom(System.Boolean)">
            <summary>
            linkTable: 是否join其他表, 注意Access在删除时不认识join
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ORM.OrmPlanar`1.Query_Property(SGLibrary.Framework.Criterion.WhereList,System.Collections.Generic.IList{SGLibrary.Framework.Criterion.OrderNode},System.String[])">
            <summary>
            只返回对应的属性
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ORM.OrmPlanar`1.Update_Where(SGLibrary.Framework.Criterion.WhereList,SGLibrary.Extend.KeyValue{System.String,System.Object}[])">
            <summary>
            注意不支持连接表的查询条件
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.ORM.OrmPropertyAttribute.Title">
            <summary>
            在表格上显示时的Title，自动生成表时会作为字段的描述
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.ORM.OrmPropertyAttribute.Sequence">
            <summary>
            在表格上显示时默认的顺序
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.ORM.OrmPropertyAttribute.Width">
            <summary>
            在表格上显示时默认的宽度
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.ORM.OrmRealAttribute">
            <summary>
            非Ref属性
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.ORM.OrmRealAttribute.Size">
            <summary>
            长度限制，0则不管
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.ORM.OrmRealAttribute.InterdictNull">
            <summary>
            禁止Null
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.ORM.OrmRealAttribute.Index">
            <summary>
            是否有索引
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.ORM.OrmPKAttribute">
            <summary>
            注意IsCustomerBuild决定谁负责构建
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.ORM.OrmPKAttribute.IsCustomerBuild">
            <summary>
            调用者提供,否则自增字段由数据库生成
            Guid字段未指定则DAC层自动生成
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.ORM.OrmPKAttribute.OracleSequenceName">
            <summary>
            默认为TableName + "_PKSeq"
            默认触发器为TableName + "_PKTrigger"
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.ORM.OrmValueKind.Common">
            <summary>
            默认普通字段，属性类型与数据库相对应
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.ORM.OrmValueKind.OnlyDate">
            <summary>
            日期，无时间
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.ORM.OrmValueKind.Money">
            <summary>
            金额，会自动处理右对齐、小数位
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.ORM.OrmValueKind.Memo">
            <summary>
            属性是字符串，表中是备注
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.ORM.OrmValueKind.ByteArray">
            <summary>
            属性是字节数组，表中是image
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.ORM.OrmValueKind.InterdictStrAutoCut">
            <summary>
            禁止字符串超过字段长度自动截取
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.ORM.OrmJoinKeyAttribute">
            <summary>
            关联到其它表的字段
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.ORM.OrmJoinKeyAttribute.JoinToEntity">
            <summary>
            join的Orm实体
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.ORM.OrmJoinKeyAttribute.JoinToPropertyName">
            <summary>
            join到目标实体的哪一个属性（不一定join到PK），缺省联接到PK
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.ORM.OrmJoinValueAttribute">
            <summary>
            从其它表查看回来的字段
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.ORM.OrmJoinValueAttribute.JoinKeyPropertyName">
            <summary>
            本实体类的哪个属性完成外连接(OrmJoinKeyAttribute的属性)
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.ORM.OrmJoinValueAttribute.JoinToPropertyName">
            <summary>
            映射到目标实体的哪一个属性，缺省联接到同名属性
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.ORM.ValueEntity`1">
            <summary>
            返回单字段列表用，FieldName：FValue
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.ConstNodeAttribute.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.ConstTreeNode">
            <summary>
            常量树的节点
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ConstTreeNode.SelectCheckedItem">
            <summary>
            仅保留打过Checked的子节点
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ConstTreeNode.EachAllChild">
            <summary>
            会递归
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ConstTreeNode.Clone">
            <summary>
            深Clone
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.ConstTreeNode.Checked">
            <summary>
            供用户使用的属性
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.ConstTreeNode.Id">
            <summary>
            Id = 0 是虚的
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.ConstTreeNode.Name">
            <summary>
            type.Name/fieldInfo.Name
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.EntityClone">
            <summary>
            根据属性/字段复制实体，是否深Clone?
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.FunNodeAttribute.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.FunNodeAttribute.EnabledBizScene">
            <summary>
            自动继承父场景，自根都没指定则任何场景都有效
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.FunNodeAttribute.Authorities">
            <summary>
            未指定则任何用户有效
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.FunTree`1">
            <summary>
            构建功能树
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.FunTree`1.GetTree">
            <summary>
            获取树
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.FunTree`1.BuileConstTree(System.Type,System.Int32[],System.Collections.Generic.IDictionary{System.Type,SGLibrary.Framework.FunTreeNode},System.Collections.Generic.IDictionary{System.Int32,SGLibrary.Framework.FunTreeNode})">
            <summary>
            构建树，Id与Description的对应关系会加入descriptDict，将被递归调用，所以传type
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.FunTree`1.GetTreeNode(System.Int32)">
            <summary>
            根据常量Id，获取节点
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.FunTree`1.GetTreeNode(System.Type)">
            <summary>
            根据类型，获取节点
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.FunTreeNode.Clone">
            <summary>
            深Clone
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.FunTreeNode.IsEnabled(System.Int32)">
            <summary>
            此bizScene下此节点是否有效，特别注意如果创建树则节点是否有效还要取决于其子节点
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.FunTreeNode.Id">
            <summary>
            Id = 0 是虚的
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.FunTreeNode.Name">
            <summary>
            type.Name/fieldInfo.Name
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.SerialCodeMng">
            <summary>
            管理顺序号
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.SerialCodeMng.GetSerialCode(System.String)">
            <summary>
            同类的顺序号: 1，2，3，4....
            用在基础数据等需要读取已有业务数据并判读,预防用户修改导致重复
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.SerialCodeMng.TryGetSerialCode(System.String)">
            <summary>
            利用SQL语句执行的原子性处理并发问题
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.SerialCodeMng.ResetSerialCode(System.String)">
            <summary>
            重置序列号
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.StringEnum">
            <summary>
            例子，通常用来处理程序中与业务逻辑相关的、以文本值而非Code保存的类型
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.StringEnum.GetIndex(System.String)">
            <summary>
            0起点，不存在返回 -1
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.StringEnum.GetValue(System.Int32)">
            <summary>
            0起点，不存在返回 null
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.TreeCodeBuilder`1.BuildTree(System.Collections.Generic.IEnumerable{`0},System.Int32)">
            <summary>
            构建一个树
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.TreeCodeBuilder`1.Find(System.Collections.Generic.IEnumerable{`0},System.String)">
            <summary>
            找到此code对应的对象
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.TreeCodeBuilder`1.FindParent(System.Collections.Generic.IEnumerable{`0},System.String,System.Int32,System.Int32)">
            <summary>
            找到此code对应层的父
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.TreeCodeBuilder`1.EachNode(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            迭代此树的所有节点，深度优先
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.TreeCodeBuilder`1.EachFaceNode(System.Collections.Generic.IEnumerable{`0},System.Int32,System.Int32)">
            <summary>
            迭代此树指定层的所有节点
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.TreeCodeBuilder`1.EachNode(System.Collections.Generic.IEnumerable{`0},System.Int32,System.Int32)">
            <summary>
            迭代节点到指定的层（包含）
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.TreeCodeBuilder`1.GetNewCode(System.String,System.Collections.Generic.IList{`0},System.Int32)">
            <summary>
            尝试获得一个新的子Code
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.ITreeCodeNode`1.EachChild">
            <summary>
            迭代节点的直接子节点
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.TreeCodeHelper`1.TestNewCode(System.String)">
            <summary>
            测试长度、构成字符、父节点是否存在、newCode是否被使用
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.TreeCodeHelper`1.TestReplaceCode(System.String,System.String)">
            <summary>
            测试newCode是否合法、newCode是否被使用、oldCode是否存在、是否非法嵌套、树的最大深度
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.WSModelConvert.PropertyMap">
            <summary>
            属性映射
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.WSModelConvert.PropertyMap.PropertyS">
            <summary>
            源属性
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.WSModelConvert.PropertyMap.PropertyT">
            <summary>
            目标属性
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.WSModelConvert.PropertyMap_Class.PropertyClassMap">
            <summary>
            属性是类，属性的类的映射
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.WSModelConvert.PropertyMap_Collections.ElementCanDirectSetValue">
            <summary>
            成员可以直接赋值
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.WSModelConvert.PropertyMap_Collections.ElementClassMap">
            <summary>
            成员是类，成员的类的映射
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.WSModelConvert.ClassMap">
            <summary>
            类映射
            </summary>
        </member>
        <member name="F:SGLibrary.Framework.WSModelConvert.ClassMap.PropertyMaps">
            <summary>
            属性映射表
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.WSModelConvert.ClassMap.TypeS">
            <summary>
            源类
            </summary>
        </member>
        <member name="P:SGLibrary.Framework.WSModelConvert.ClassMap.TypeT">
            <summary>
            目标类
            </summary>
        </member>
        <member name="M:SGLibrary.Framework.WSModelConvert.ClassMapProvider.GetClassMap(System.Type,System.Type)">
            <summary>
            获取转换的映射描述
            </summary>
        </member>
        <member name="T:SGLibrary.Framework.WSModelConvert.IWSModelConverter">
            <summary>
            实现Web引用对象与本地对象间转换
            只转换同名的Public/Instance属性，同类型的直接转换，对象则递归(注意不可以出现循环的类型：属性是某父级类型)
            Web引用会生成新的类，这样Web引用面向的模型与直接访问面向的模型不一致，
            使客户端不能灵活转换本地引擎/远程引擎，通过这个转换可以轻易实现模型的一致
            </summary>
        </member>
        <member name="T:SGLibrary.Trick.Buffer`1">
            <summary>
            一个缓存器
            </summary>
        </member>
        <member name="M:SGLibrary.Trick.Buffer`1.#ctor(SGLibrary.Trick.FunGetter{`0},System.Int32)">
            <summary>
            life: 单位秒
            </summary>
        </member>
        <member name="T:SGLibrary.Trick.CollectionCompare`1">
            <summary>
            比较两个集合决定那些新增，那些需要删除
            </summary>
        </member>
        <member name="T:SGLibrary.Trick.CollectionCompare_Recover`1">
            <summary>
            比较两个集合决定那些新增，那些需要删除，那些可以复用
            </summary>
        </member>
        <member name="T:SGLibrary.Trick.CollectionRecover`1">
            <summary>
            元素复用器
            </summary>
        </member>
        <member name="M:SGLibrary.Trick.CollectionRecover`1.AddToWillBeAdd(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            会自动更新可复用的
            </summary>
        </member>
        <member name="M:SGLibrary.Trick.CollectionRecover`1.AddToWillBeRemoved(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            会自动更新可复用的
            </summary>
        </member>
    </members>
</doc>
